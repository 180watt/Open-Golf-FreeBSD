.VSBasePath = 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023'
.WindowsSDKBasePath = 'C:\Program Files (x86)\Windows Kits\10\Lib\10.0.17763.0'
.INCLUDE = 'src;libs;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include;;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\atlmfc\include;;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\VS\include;;C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt;;;C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\um;C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\shared;C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\winrt;C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\cppwinrt;Include\um;'

.Platform_win64 = [
    .PlatformName = "win64"

    .Compiler = "$VSBasePath$\bin\Hostx64\x64\cl.exe"
    .CompilerOptions = '"%1"'
                        + ' /Fo"%2"'
                        + ' /c'
                        + ' /nologo'
                        + ' /W3'
                        + ' /Z7'
                        + ' /D HOLE_EDITOR'
                        + ' /D WINDOWS_BUILD'
                        + ' /D _CONSOLE'
                        + ' /D SOKOL_GLCORE33'
                        + ' /D HOTLOADER_ACTIVE'
                        + ' /I src'
                        + ' /I libs'
                        + ' /I "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include"'
                        + ' /I "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\atlmfc\include"'
                        + ' /I "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\VS\include"'
                        + ' /I "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt"'
                        + ' /I "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\um"'
                        + ' /I "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\shared"'
                        + ' /I "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\winrt"'
                        + ' /I "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\cppwinrt"'
    .CompilerOutputPath = "out/win64/"

    .Linker = "$VSBasePath$\bin\Hostx64\x64\link.exe"
    .LinkerOptions = '/OUT:"%2"'
                        + ' "%1"'
                        + ' /ignore:4049'
                        + ' /ignore:4217'
                        + ' /ignore:4098'
                        + ' /INCREMENTAL'
                        + ' /LIBPATH:"libs/GLFW"'
                        + ' /LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\lib\x64"'
                        + ' /LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\atlmfc\lib\x64"'
                        + ' /LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\VS\lib\x64"'
                        + ' /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\lib\10.0.17763.0\ucrt\x64"'
                        + ' /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\lib\10.0.17763.0\um\x64"'
                        + ' /NOLOGO'
                        + ' /DEBUG'
                        + ' glfw3.lib'
                        + ' OpenGL32.lib'
                        + ' kernel32.lib'
                        + ' user32.lib'
                        + ' gdi32.lib'
                        + ' winspool.lib'
                        + ' comdlg32.lib'
                        + ' advapi32.lib'
                        + ' shell32.lib'
                        + ' ole32.lib'
                        + ' oleaut32.lib'
                        + ' uuid.lib'
                        + ' odbc32.lib'
                        + ' odbccp32.lib'
                        + ' /SUBSYSTEM:CONSOLE'
                        + ' /TLBID:1'
                        + ' /DYNAMICBASE'
                        + ' /NXCOMPAT'
                        + ' /MACHINE:X64'

    .Config_debug = [
        .ConfigName = "debug"
        .CompilerOptions + ' /Od' 
        .CompilerOutputPath + 'debug/'
        .LinkerOutput = "$CompilerOutputPath$minigolf.exe"
    ]

    .Config_release = [
        .ConfigName = "release"
        .CompilerOptions + ' /O2'
        .CompilerOutputPath + 'release/'
        .LinkerOutput = "$CompilerOutputPath$minigolf.exe"
    ]

    .Configs = { .Config_debug, .Config_release }
]

.Platform_osx = [
    .PlatformName = "osx"

    .Compiler = "/usr/bin/clang"
    .CompilerOptions = '%1 -o %2 -c -Isrc -Wall -Wno-unused-function -Wno-unused-variable -g -DSOKOL_GLCORE33 -DHOLE_EDITOR -DHOTLOADER_ACTIVE'
    .CompilerOutputPath = "out/osx/"

    .Linker = "/usr/bin/clang"
    .LinkerOptions = "%1 -o %2  -lm -lpthread -lstdc++ -framework Cocoa -framework CoreServices -framework OpenGL -framework AudioToolbox -g -rdynamic"

    .Config_debug = [
        .ConfigName = "debug"
        .CompilerOptions + '' 
        .CompilerOutputPath + 'debug/'
        .LinkerOutput = "$CompilerOutputPath$minigolf"
    ]

    .Configs = { .Config_debug, }
]

.Platforms = { .Platform_win64, .Platform_osx }

.ObjectList_golf = [
    .ObjectListName = "golf"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/golf/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_sokol = [
    .ObjectListName = "sokol"
    .Defines = { }
    .ObjectCompilerOptions = " -ObjC"
    .CompilerInputPath = { "src/3rd_party/sokol/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_vec = [
    .ObjectListName = "vec"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/vec/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_map = [
    .ObjectListName = "map"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/map/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_lightmapper = [
    .ObjectListName = "lightmapper"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/lightmapper/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_glad = [
    .ObjectListName = "glad"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/glad/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_s7 = [
    .ObjectListName = "s7"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/s7/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_tinyobj_loader_c = [
    .ObjectListName = "tinyobj_loader_c"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/tinyobj_loader_c/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_mattiasgustavsson_libs = [
    .ObjectListName = "mattiasgustavsson_libs"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/mattiasgustavsson_libs/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_stb = [
    .ObjectListName = "stb"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/stb/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_miniz = [
    .ObjectListName = "miniz"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/miniz/" }
    .CompilerInputPattern = { "*.c" }
]

.ObjectList_imgui = [
    .ObjectListName = "imgui"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/imgui/" }
    .CompilerInputPattern = { "*.cpp" }
]

.ObjectList_cimgui = [
    .ObjectListName = "cimgui"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/cimgui/" }
    .CompilerInputPattern = { "*.cpp" }
]

.ObjectList_dbgtools = [
    .ObjectListName = "dbgtools"
    .Defines = { }
    .ObjectCompilerOptions = ""
    .CompilerInputPath = { "src/3rd_party/dbgtools/" }
    .CompilerInputPattern = { "*.cpp" }
]

.ObjectLists = { 
    .ObjectList_golf, 
    .ObjectList_sokol,
    .ObjectList_vec,
    .ObjectList_map,
    .ObjectList_lightmapper,
    .ObjectList_glad,
    .ObjectList_s7,
    .ObjectList_tinyobj_loader_c,
    .ObjectList_mattiasgustavsson_libs,
    .ObjectList_stb,
    .ObjectList_miniz,
    .ObjectList_imgui,
    .ObjectList_cimgui,
    .ObjectList_dbgtools,
}

function CreateObjectList(.Platform .Config .ObjectList) {
    Using(.Platform)
    Using(.Config)
    Using(.ObjectList)
    
    ForEach(.Define in .Defines) {
        .Platform_win64_name = "win64"
        If (.PlatformName == .Platform_win64_name) {
            ^CompilerOptions + " /D $Define$"
        }

        .Platform_osx_name = "osx"
        If (.PlatformName == .Platform_osx_name) {
            ^CompilerOptions + " -D$Define$"
        }
    }

    .CompilerOptions + .ObjectCompilerOptions
    .CompilerOutputPath + "$ObjectListName$/"

    ObjectList("$ObjectListName$-$PlatformName$-$ConfigName$") {
    }
}

ForEach(.Platform in .Platforms) {
    Using(.Platform) 

    ForEach(.Config in .Configs) {
        Using(.Config)
        .Libraries = { }

        ForEach(.ObjectList in .ObjectLists) {
            Using(.ObjectList)
            CreateObjectList(.Platform .Config .ObjectList)
            ^Libraries + "$ObjectListName$-$PlatformName$-$ConfigName$"
        }

        Executable("minigolf-$PlatformName$-$ConfigName$") {
        }
    }
}
