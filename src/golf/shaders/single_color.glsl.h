#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input data/shaders/single_color.glsl --output src/golf/shaders/single_color.glsl.h --slang glsl330:glsl300es

    Overview:

        Shader program 'single_color':
            Get shader desc: single_color_shader_desc(sg_query_backend());
            Vertex shader: single_color_vs
                Attribute slots:
                    ATTR_single_color_vs_position = 0
                    ATTR_single_color_vs_normal = 1
                Uniform block 'single_color_vs_params':
                    C struct: single_color_vs_params_t
                    Bind slot: SLOT_single_color_vs_params = 0
            Fragment shader: single_color_fs
                Uniform block 'single_color_fs_params':
                    C struct: single_color_fs_params_t
                    Bind slot: SLOT_single_color_fs_params = 0


    Shader descriptor structs:

        sg_shader single_color = sg_make_shader(single_color_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'single_color_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_single_color_vs_position] = { ... },
                    [ATTR_single_color_vs_normal] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]


    Bind slot and C-struct for uniform block 'single_color_vs_params':

        single_color_vs_params_t single_color_vs_params = {
            .model_mat = ...;
            .proj_view_mat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_single_color_vs_params, &SG_RANGE(single_color_vs_params));

    Bind slot and C-struct for uniform block 'single_color_fs_params':

        single_color_fs_params_t single_color_fs_params = {
            .color = ...;
            .kd_scale = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_single_color_fs_params, &SG_RANGE(single_color_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_single_color_vs_position (0)
#define ATTR_single_color_vs_normal (1)
#define SLOT_single_color_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct single_color_vs_params_t {
    mat4 model_mat;
    mat4 proj_view_mat;
} single_color_vs_params_t;
#pragma pack(pop)
#define SLOT_single_color_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct single_color_fs_params_t {
    vec4 color;
    float kd_scale;
    uint8_t _pad_20[12];
} single_color_fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 single_color_vs_params[8];
    out vec3 frag_normal;
    layout(location = 1) in vec3 normal;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        mat4 _21 = mat4(single_color_vs_params[0], single_color_vs_params[1], single_color_vs_params[2], single_color_vs_params[3]);
        frag_normal = normalize((transpose(inverse(_21)) * vec4(normal, 0.0)).xyz);
        gl_Position = (mat4(single_color_vs_params[4], single_color_vs_params[5], single_color_vs_params[6], single_color_vs_params[7]) * _21) * vec4(position, 1.0);
    }
    
*/
static const char single_color_vs_source_glsl330[542] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x69,0x6e,0x67,0x6c,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,
    0x5f,0x32,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x73,0x69,0x6e,0x67,0x6c,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,
    0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,
    0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x69,
    0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x32,0x31,0x29,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,
    0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x35,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,
    0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,
    0x31,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 single_color_fs_params[2];
    in vec3 frag_normal;
    layout(location = 0) out vec4 g_frag_color;
    
    void main()
    {
        vec3 light_dir[16];
        light_dir[0] = vec3(0.521704971790313720703125, -0.81872999668121337890625, 0.23980300128459930419921875);
        light_dir[1] = vec3(-0.64021599292755126953125, -0.699186980724334716796875, 0.3182159960269927978515625);
        light_dir[2] = vec3(-0.15373800694942474365234375, -0.982361018657684326171875, 0.106449000537395477294921875);
        light_dir[3] = vec3(0.739134013652801513671875, -0.4232099950313568115234375, 0.5239989757537841796875);
        light_dir[4] = vec3(0.3420380055904388427734375, -0.902010977268218994140625, -0.263413012027740478515625);
        light_dir[5] = vec3(-0.3218159973621368408203125, -0.422089993953704833984375, 0.847510993480682373046875);
        light_dir[6] = vec3(0.3038940131664276123046875, -0.945710003376007080078125, 0.1152440011501312255859375);
        light_dir[7] = vec3(-0.2738589942455291748046875, -0.896176993846893310546875, 0.349096000194549560546875);
        light_dir[8] = vec3(-0.64784801006317138671875, -0.654807984828948974609375, 0.389254987239837646484375);
        light_dir[9] = vec3(0.109160996973514556884765625, -0.762332975864410400390625, 0.6379129886627197265625);
        light_dir[10] = vec3(0.2267830073833465576171875, -0.2944900095462799072265625, 0.928355991840362548828125);
        light_dir[11] = vec3(0.0166929997503757476806640625, -0.9926459789276123046875, -0.11989299952983856201171875);
        light_dir[12] = vec3(-0.4492549896240234375, -0.4914880096912384033203125, -0.7460629940032958984375);
        light_dir[13] = vec3(0.16172699630260467529296875, -0.1967259943485260009765625, -0.96702802181243896484375);
        light_dir[14] = vec3(0.6336460113525390625, -0.773217976093292236328125, 0.025035999715328216552734375);
        light_dir[15] = vec3(0.62467300891876220703125, -0.720305979251861572265625, 0.30156600475311279296875);
        float kd = 0.0;
        for (int i = 0; i < 16; i++)
        {
            kd += max(dot(normalize(frag_normal), -light_dir[i]), 0.100000001490116119384765625);
        }
        float _143 = kd;
        float _144 = _143 * 0.0625;
        kd = _144;
        g_frag_color = vec4((single_color_fs_params[0].xyz * (single_color_fs_params[1].x * _144)) + (single_color_fs_params[0].xyz * (1.0 - single_color_fs_params[1].x)), single_color_fs_params[0].w);
    }
    
*/
static const char single_color_fs_source_glsl330[2371] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x69,0x6e,0x67,0x6c,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x30,0x5d,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x32,0x31,0x37,0x30,0x34,0x39,0x37,
    0x31,0x37,0x39,0x30,0x33,0x31,0x33,0x37,0x32,0x30,0x37,0x30,0x33,0x31,0x32,0x35,
    0x2c,0x20,0x2d,0x30,0x2e,0x38,0x31,0x38,0x37,0x32,0x39,0x39,0x39,0x36,0x36,0x38,
    0x31,0x32,0x31,0x33,0x33,0x37,0x38,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x32,0x33,0x39,0x38,0x30,0x33,0x30,0x30,0x31,0x32,0x38,0x34,0x35,0x39,0x39,0x33,
    0x30,0x34,0x31,0x39,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x36,0x34,0x30,0x32,0x31,0x35,0x39,0x39,
    0x32,0x39,0x32,0x37,0x35,0x35,0x31,0x32,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,
    0x20,0x2d,0x30,0x2e,0x36,0x39,0x39,0x31,0x38,0x36,0x39,0x38,0x30,0x37,0x32,0x34,
    0x33,0x33,0x34,0x37,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,
    0x33,0x31,0x38,0x32,0x31,0x35,0x39,0x39,0x36,0x30,0x32,0x36,0x39,0x39,0x32,0x37,
    0x39,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x31,0x35,0x33,0x37,0x33,0x38,0x30,0x30,0x36,
    0x39,0x34,0x39,0x34,0x32,0x34,0x37,0x34,0x33,0x36,0x35,0x32,0x33,0x34,0x33,0x37,
    0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,0x38,0x32,0x33,0x36,0x31,0x30,0x31,0x38,0x36,
    0x35,0x37,0x36,0x38,0x34,0x33,0x32,0x36,0x31,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,
    0x30,0x2e,0x31,0x30,0x36,0x34,0x34,0x39,0x30,0x30,0x30,0x35,0x33,0x37,0x33,0x39,
    0x35,0x34,0x37,0x37,0x32,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x33,0x5d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x37,0x33,0x39,0x31,0x33,0x34,
    0x30,0x31,0x33,0x36,0x35,0x32,0x38,0x30,0x31,0x35,0x31,0x33,0x36,0x37,0x31,0x38,
    0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x34,0x32,0x33,0x32,0x30,0x39,0x39,0x39,0x35,
    0x30,0x33,0x31,0x33,0x35,0x36,0x38,0x31,0x31,0x35,0x32,0x33,0x34,0x33,0x37,0x35,
    0x2c,0x20,0x30,0x2e,0x35,0x32,0x33,0x39,0x39,0x38,0x39,0x37,0x35,0x37,0x35,0x33,
    0x37,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x34,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x34,0x32,0x30,0x33,0x38,0x30,0x30,0x35,
    0x35,0x39,0x30,0x34,0x33,0x38,0x38,0x34,0x32,0x37,0x37,0x33,0x34,0x33,0x37,0x35,
    0x2c,0x20,0x2d,0x30,0x2e,0x39,0x30,0x32,0x30,0x31,0x30,0x39,0x37,0x37,0x32,0x36,
    0x38,0x32,0x31,0x38,0x39,0x39,0x34,0x31,0x34,0x30,0x36,0x32,0x35,0x2c,0x20,0x2d,
    0x30,0x2e,0x32,0x36,0x33,0x34,0x31,0x33,0x30,0x31,0x32,0x30,0x32,0x37,0x37,0x34,
    0x30,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x35,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x33,0x32,0x31,0x38,0x31,0x35,0x39,0x39,
    0x37,0x33,0x36,0x32,0x31,0x33,0x36,0x38,0x34,0x30,0x38,0x32,0x30,0x33,0x31,0x32,
    0x35,0x2c,0x20,0x2d,0x30,0x2e,0x34,0x32,0x32,0x30,0x38,0x39,0x39,0x39,0x33,0x39,
    0x35,0x33,0x37,0x30,0x34,0x38,0x33,0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,
    0x30,0x2e,0x38,0x34,0x37,0x35,0x31,0x30,0x39,0x39,0x33,0x34,0x38,0x30,0x36,0x38,
    0x32,0x33,0x37,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x36,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x30,0x33,0x38,0x39,0x34,0x30,0x31,0x33,
    0x31,0x36,0x36,0x34,0x32,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,
    0x2c,0x20,0x2d,0x30,0x2e,0x39,0x34,0x35,0x37,0x31,0x30,0x30,0x30,0x33,0x33,0x37,
    0x36,0x30,0x30,0x37,0x30,0x38,0x30,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x31,0x31,0x35,0x32,0x34,0x34,0x30,0x30,0x31,0x31,0x35,0x30,0x31,0x33,0x31,
    0x32,0x32,0x35,0x35,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x37,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x32,0x37,0x33,0x38,0x35,0x38,0x39,0x39,
    0x34,0x32,0x34,0x35,0x35,0x32,0x39,0x31,0x37,0x34,0x38,0x30,0x34,0x36,0x38,0x37,
    0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x39,0x36,0x31,0x37,0x36,0x39,0x39,0x33,0x38,
    0x34,0x36,0x38,0x39,0x33,0x33,0x31,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,
    0x30,0x2e,0x33,0x34,0x39,0x30,0x39,0x36,0x30,0x30,0x30,0x31,0x39,0x34,0x35,0x34,
    0x39,0x35,0x36,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x38,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x36,0x34,0x37,0x38,0x34,0x38,0x30,0x31,
    0x30,0x30,0x36,0x33,0x31,0x37,0x31,0x33,0x38,0x36,0x37,0x31,0x38,0x37,0x35,0x2c,
    0x20,0x2d,0x30,0x2e,0x36,0x35,0x34,0x38,0x30,0x37,0x39,0x38,0x34,0x38,0x32,0x38,
    0x39,0x34,0x38,0x39,0x37,0x34,0x36,0x30,0x39,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,
    0x33,0x38,0x39,0x32,0x35,0x34,0x39,0x38,0x37,0x32,0x33,0x39,0x38,0x33,0x37,0x36,
    0x34,0x36,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x39,0x5d,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x31,0x30,0x39,0x31,0x36,0x30,0x39,0x39,0x36,0x39,0x37,
    0x33,0x35,0x31,0x34,0x35,0x35,0x36,0x38,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x2c,0x20,0x2d,0x30,0x2e,0x37,0x36,0x32,0x33,0x33,0x32,0x39,0x37,0x35,0x38,0x36,
    0x34,0x34,0x31,0x30,0x34,0x30,0x30,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x36,0x33,0x37,0x39,0x31,0x32,0x39,0x38,0x38,0x36,0x36,0x32,0x37,0x31,0x39,
    0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x32,0x32,0x36,0x37,0x38,0x33,0x30,0x30,0x37,0x33,0x38,
    0x33,0x33,0x34,0x36,0x35,0x35,0x37,0x36,0x31,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,
    0x2d,0x30,0x2e,0x32,0x39,0x34,0x34,0x39,0x30,0x30,0x30,0x39,0x35,0x34,0x36,0x32,
    0x37,0x39,0x39,0x30,0x37,0x32,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x39,0x32,0x38,0x33,0x35,0x35,0x39,0x39,0x31,0x38,0x34,0x30,0x33,0x36,0x32,0x35,
    0x34,0x38,0x38,0x32,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x31,0x5d,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x31,0x36,0x36,0x39,0x32,0x39,0x39,0x39,0x37,
    0x35,0x30,0x33,0x37,0x35,0x37,0x34,0x37,0x36,0x38,0x30,0x36,0x36,0x34,0x30,0x36,
    0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,0x39,0x32,0x36,0x34,0x35,0x39,0x37,0x38,
    0x39,0x32,0x37,0x36,0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x2d,
    0x30,0x2e,0x31,0x31,0x39,0x38,0x39,0x32,0x39,0x39,0x39,0x35,0x32,0x39,0x38,0x33,
    0x38,0x35,0x36,0x32,0x30,0x31,0x31,0x37,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x32,0x5d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,0x34,0x34,0x39,0x32,0x35,
    0x34,0x39,0x38,0x39,0x36,0x32,0x34,0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x2c,0x20,
    0x2d,0x30,0x2e,0x34,0x39,0x31,0x34,0x38,0x38,0x30,0x30,0x39,0x36,0x39,0x31,0x32,
    0x33,0x38,0x34,0x30,0x33,0x33,0x32,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,
    0x2e,0x37,0x34,0x36,0x30,0x36,0x32,0x39,0x39,0x34,0x30,0x30,0x33,0x32,0x39,0x35,
    0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x33,0x5d,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x31,0x36,0x31,0x37,0x32,0x36,0x39,0x39,0x36,0x33,0x30,
    0x32,0x36,0x30,0x34,0x36,0x37,0x35,0x32,0x39,0x32,0x39,0x36,0x38,0x37,0x35,0x2c,
    0x20,0x2d,0x30,0x2e,0x31,0x39,0x36,0x37,0x32,0x35,0x39,0x39,0x34,0x33,0x34,0x38,
    0x35,0x32,0x36,0x30,0x30,0x30,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x2d,
    0x30,0x2e,0x39,0x36,0x37,0x30,0x32,0x38,0x30,0x32,0x31,0x38,0x31,0x32,0x34,0x33,
    0x38,0x39,0x36,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x34,0x5d,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x36,0x33,0x33,0x36,0x34,0x36,0x30,0x31,0x31,
    0x33,0x35,0x32,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x37,
    0x37,0x33,0x32,0x31,0x37,0x39,0x37,0x36,0x30,0x39,0x33,0x32,0x39,0x32,0x32,0x33,
    0x36,0x33,0x32,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x32,0x35,0x30,0x33,
    0x35,0x39,0x39,0x39,0x37,0x31,0x35,0x33,0x32,0x38,0x32,0x31,0x36,0x35,0x35,0x32,
    0x37,0x33,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x35,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x30,0x2e,0x36,0x32,0x34,0x36,0x37,0x33,0x30,0x30,0x38,0x39,0x31,0x38,
    0x37,0x36,0x32,0x32,0x30,0x37,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,
    0x37,0x32,0x30,0x33,0x30,0x35,0x39,0x37,0x39,0x32,0x35,0x31,0x38,0x36,0x31,0x35,
    0x37,0x32,0x32,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x33,0x30,0x31,0x35,
    0x36,0x36,0x30,0x30,0x34,0x37,0x35,0x33,0x31,0x31,0x32,0x37,0x39,0x32,0x39,0x36,
    0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6b,0x64,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,
    0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,
    0x3c,0x20,0x31,0x36,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6b,0x64,0x20,0x2b,0x3d,0x20,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x2d,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x69,0x5d,0x29,0x2c,0x20,0x30,
    0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,
    0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x34,0x33,0x20,0x3d,0x20,0x6b,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x34,0x20,0x3d,0x20,0x5f,0x31,0x34,0x33,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,0x64,
    0x20,0x3d,0x20,0x5f,0x31,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x28,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x20,0x2a,
    0x20,0x5f,0x31,0x34,0x34,0x29,0x29,0x20,0x2b,0x20,0x28,0x73,0x69,0x6e,0x67,0x6c,
    0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x29,0x29,0x2c,
    0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 single_color_vs_params[8];
    out vec3 frag_normal;
    layout(location = 1) in vec3 normal;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        mat4 _21 = mat4(single_color_vs_params[0], single_color_vs_params[1], single_color_vs_params[2], single_color_vs_params[3]);
        frag_normal = normalize((transpose(inverse(_21)) * vec4(normal, 0.0)).xyz);
        gl_Position = (mat4(single_color_vs_params[4], single_color_vs_params[5], single_color_vs_params[6], single_color_vs_params[7]) * _21) * vec4(position, 1.0);
    }
    
*/
static const char single_color_vs_source_glsl300es[545] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x73,0x69,
    0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,
    0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x73,0x69,
    0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x73,
    0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,
    0x65,0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x32,0x31,0x29,0x29,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x73,0x69,
    0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x36,0x5d,0x2c,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,
    0x20,0x5f,0x32,0x31,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 single_color_fs_params[2];
    in highp vec3 frag_normal;
    layout(location = 0) out highp vec4 g_frag_color;
    
    void main()
    {
        highp vec3 light_dir[16];
        light_dir[0] = vec3(0.521704971790313720703125, -0.81872999668121337890625, 0.23980300128459930419921875);
        light_dir[1] = vec3(-0.64021599292755126953125, -0.699186980724334716796875, 0.3182159960269927978515625);
        light_dir[2] = vec3(-0.15373800694942474365234375, -0.982361018657684326171875, 0.106449000537395477294921875);
        light_dir[3] = vec3(0.739134013652801513671875, -0.4232099950313568115234375, 0.5239989757537841796875);
        light_dir[4] = vec3(0.3420380055904388427734375, -0.902010977268218994140625, -0.263413012027740478515625);
        light_dir[5] = vec3(-0.3218159973621368408203125, -0.422089993953704833984375, 0.847510993480682373046875);
        light_dir[6] = vec3(0.3038940131664276123046875, -0.945710003376007080078125, 0.1152440011501312255859375);
        light_dir[7] = vec3(-0.2738589942455291748046875, -0.896176993846893310546875, 0.349096000194549560546875);
        light_dir[8] = vec3(-0.64784801006317138671875, -0.654807984828948974609375, 0.389254987239837646484375);
        light_dir[9] = vec3(0.109160996973514556884765625, -0.762332975864410400390625, 0.6379129886627197265625);
        light_dir[10] = vec3(0.2267830073833465576171875, -0.2944900095462799072265625, 0.928355991840362548828125);
        light_dir[11] = vec3(0.0166929997503757476806640625, -0.9926459789276123046875, -0.11989299952983856201171875);
        light_dir[12] = vec3(-0.4492549896240234375, -0.4914880096912384033203125, -0.7460629940032958984375);
        light_dir[13] = vec3(0.16172699630260467529296875, -0.1967259943485260009765625, -0.96702802181243896484375);
        light_dir[14] = vec3(0.6336460113525390625, -0.773217976093292236328125, 0.025035999715328216552734375);
        light_dir[15] = vec3(0.62467300891876220703125, -0.720305979251861572265625, 0.30156600475311279296875);
        highp float kd = 0.0;
        for (int i = 0; i < 16; i++)
        {
            kd += max(dot(normalize(frag_normal), -light_dir[i]), 0.100000001490116119384765625);
        }
        highp float _143 = kd;
        highp float _144 = _143 * 0.0625;
        kd = _144;
        g_frag_color = vec4((single_color_fs_params[0].xyz * (single_color_fs_params[1].x * _144)) + (single_color_fs_params[0].xyz * (1.0 - single_color_fs_params[1].x)), single_color_fs_params[0].w);
    }
    
*/
static const char single_color_fs_source_glsl300es[2462] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x69,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x72,0x5b,0x31,0x36,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x64,0x69,0x72,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x35,0x32,0x31,0x37,0x30,0x34,0x39,0x37,0x31,0x37,0x39,0x30,0x33,0x31,0x33,
    0x37,0x32,0x30,0x37,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x31,
    0x38,0x37,0x32,0x39,0x39,0x39,0x36,0x36,0x38,0x31,0x32,0x31,0x33,0x33,0x37,0x38,
    0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x32,0x33,0x39,0x38,0x30,0x33,0x30,
    0x30,0x31,0x32,0x38,0x34,0x35,0x39,0x39,0x33,0x30,0x34,0x31,0x39,0x39,0x32,0x31,
    0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,
    0x2e,0x36,0x34,0x30,0x32,0x31,0x35,0x39,0x39,0x32,0x39,0x32,0x37,0x35,0x35,0x31,
    0x32,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x36,0x39,0x39,
    0x31,0x38,0x36,0x39,0x38,0x30,0x37,0x32,0x34,0x33,0x33,0x34,0x37,0x31,0x36,0x37,
    0x39,0x36,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x33,0x31,0x38,0x32,0x31,0x35,0x39,
    0x39,0x36,0x30,0x32,0x36,0x39,0x39,0x32,0x37,0x39,0x37,0x38,0x35,0x31,0x35,0x36,
    0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x72,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,0x2e,
    0x31,0x35,0x33,0x37,0x33,0x38,0x30,0x30,0x36,0x39,0x34,0x39,0x34,0x32,0x34,0x37,
    0x34,0x33,0x36,0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,
    0x38,0x32,0x33,0x36,0x31,0x30,0x31,0x38,0x36,0x35,0x37,0x36,0x38,0x34,0x33,0x32,
    0x36,0x31,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x31,0x30,0x36,0x34,0x34,
    0x39,0x30,0x30,0x30,0x35,0x33,0x37,0x33,0x39,0x35,0x34,0x37,0x37,0x32,0x39,0x34,
    0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x30,0x2e,0x37,0x33,0x39,0x31,0x33,0x34,0x30,0x31,0x33,0x36,0x35,0x32,0x38,
    0x30,0x31,0x35,0x31,0x33,0x36,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,
    0x34,0x32,0x33,0x32,0x30,0x39,0x39,0x39,0x35,0x30,0x33,0x31,0x33,0x35,0x36,0x38,
    0x31,0x31,0x35,0x32,0x33,0x34,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,0x35,0x32,0x33,
    0x39,0x39,0x38,0x39,0x37,0x35,0x37,0x35,0x33,0x37,0x38,0x34,0x31,0x37,0x39,0x36,
    0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x34,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x33,0x34,0x32,0x30,0x33,0x38,0x30,0x30,0x35,0x35,0x39,0x30,0x34,0x33,0x38,0x38,
    0x34,0x32,0x37,0x37,0x33,0x34,0x33,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,0x30,
    0x32,0x30,0x31,0x30,0x39,0x37,0x37,0x32,0x36,0x38,0x32,0x31,0x38,0x39,0x39,0x34,
    0x31,0x34,0x30,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x32,0x36,0x33,0x34,0x31,
    0x33,0x30,0x31,0x32,0x30,0x32,0x37,0x37,0x34,0x30,0x34,0x37,0x38,0x35,0x31,0x35,
    0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x35,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,
    0x2e,0x33,0x32,0x31,0x38,0x31,0x35,0x39,0x39,0x37,0x33,0x36,0x32,0x31,0x33,0x36,
    0x38,0x34,0x30,0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x34,
    0x32,0x32,0x30,0x38,0x39,0x39,0x39,0x33,0x39,0x35,0x33,0x37,0x30,0x34,0x38,0x33,
    0x33,0x39,0x38,0x34,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,0x38,0x34,0x37,0x35,0x31,
    0x30,0x39,0x39,0x33,0x34,0x38,0x30,0x36,0x38,0x32,0x33,0x37,0x33,0x30,0x34,0x36,
    0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x36,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x33,0x30,0x33,0x38,0x39,0x34,0x30,0x31,0x33,0x31,0x36,0x36,0x34,0x32,0x37,0x36,
    0x31,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,0x34,
    0x35,0x37,0x31,0x30,0x30,0x30,0x33,0x33,0x37,0x36,0x30,0x30,0x37,0x30,0x38,0x30,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x31,0x31,0x35,0x32,0x34,0x34,
    0x30,0x30,0x31,0x31,0x35,0x30,0x31,0x33,0x31,0x32,0x32,0x35,0x35,0x38,0x35,0x39,
    0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x37,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,
    0x2e,0x32,0x37,0x33,0x38,0x35,0x38,0x39,0x39,0x34,0x32,0x34,0x35,0x35,0x32,0x39,
    0x31,0x37,0x34,0x38,0x30,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,
    0x39,0x36,0x31,0x37,0x36,0x39,0x39,0x33,0x38,0x34,0x36,0x38,0x39,0x33,0x33,0x31,
    0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x33,0x34,0x39,0x30,0x39,
    0x36,0x30,0x30,0x30,0x31,0x39,0x34,0x35,0x34,0x39,0x35,0x36,0x30,0x35,0x34,0x36,
    0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x64,0x69,0x72,0x5b,0x38,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x2d,0x30,
    0x2e,0x36,0x34,0x37,0x38,0x34,0x38,0x30,0x31,0x30,0x30,0x36,0x33,0x31,0x37,0x31,
    0x33,0x38,0x36,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x36,0x35,0x34,
    0x38,0x30,0x37,0x39,0x38,0x34,0x38,0x32,0x38,0x39,0x34,0x38,0x39,0x37,0x34,0x36,
    0x30,0x39,0x33,0x37,0x35,0x2c,0x20,0x30,0x2e,0x33,0x38,0x39,0x32,0x35,0x34,0x39,
    0x38,0x37,0x32,0x33,0x39,0x38,0x33,0x37,0x36,0x34,0x36,0x34,0x38,0x34,0x33,0x37,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x72,0x5b,0x39,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x30,
    0x39,0x31,0x36,0x30,0x39,0x39,0x36,0x39,0x37,0x33,0x35,0x31,0x34,0x35,0x35,0x36,
    0x38,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x37,0x36,
    0x32,0x33,0x33,0x32,0x39,0x37,0x35,0x38,0x36,0x34,0x34,0x31,0x30,0x34,0x30,0x30,
    0x33,0x39,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x33,0x37,0x39,0x31,0x32,
    0x39,0x38,0x38,0x36,0x36,0x32,0x37,0x31,0x39,0x37,0x32,0x36,0x35,0x36,0x32,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,
    0x5b,0x31,0x30,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x32,
    0x36,0x37,0x38,0x33,0x30,0x30,0x37,0x33,0x38,0x33,0x33,0x34,0x36,0x35,0x35,0x37,
    0x36,0x31,0x37,0x31,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x32,0x39,0x34,0x34,
    0x39,0x30,0x30,0x30,0x39,0x35,0x34,0x36,0x32,0x37,0x39,0x39,0x30,0x37,0x32,0x32,
    0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x39,0x32,0x38,0x33,0x35,0x35,0x39,
    0x39,0x31,0x38,0x34,0x30,0x33,0x36,0x32,0x35,0x34,0x38,0x38,0x32,0x38,0x31,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,
    0x72,0x5b,0x31,0x31,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x31,0x36,0x36,0x39,0x32,0x39,0x39,0x39,0x37,0x35,0x30,0x33,0x37,0x35,0x37,0x34,
    0x37,0x36,0x38,0x30,0x36,0x36,0x34,0x30,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,
    0x39,0x39,0x32,0x36,0x34,0x35,0x39,0x37,0x38,0x39,0x32,0x37,0x36,0x31,0x32,0x33,
    0x30,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x31,0x31,0x39,0x38,0x39,
    0x32,0x39,0x39,0x39,0x35,0x32,0x39,0x38,0x33,0x38,0x35,0x36,0x32,0x30,0x31,0x31,
    0x37,0x31,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x69,0x72,0x5b,0x31,0x32,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x2d,0x30,0x2e,0x34,0x34,0x39,0x32,0x35,0x34,0x39,0x38,0x39,0x36,0x32,0x34,
    0x30,0x32,0x33,0x34,0x33,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x34,0x39,0x31,0x34,
    0x38,0x38,0x30,0x30,0x39,0x36,0x39,0x31,0x32,0x33,0x38,0x34,0x30,0x33,0x33,0x32,
    0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x37,0x34,0x36,0x30,0x36,0x32,
    0x39,0x39,0x34,0x30,0x30,0x33,0x32,0x39,0x35,0x38,0x39,0x38,0x34,0x33,0x37,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,
    0x5b,0x31,0x33,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x36,
    0x31,0x37,0x32,0x36,0x39,0x39,0x36,0x33,0x30,0x32,0x36,0x30,0x34,0x36,0x37,0x35,
    0x32,0x39,0x32,0x39,0x36,0x38,0x37,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x31,0x39,0x36,
    0x37,0x32,0x35,0x39,0x39,0x34,0x33,0x34,0x38,0x35,0x32,0x36,0x30,0x30,0x30,0x39,
    0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x39,0x36,0x37,0x30,0x32,
    0x38,0x30,0x32,0x31,0x38,0x31,0x32,0x34,0x33,0x38,0x39,0x36,0x34,0x38,0x34,0x33,
    0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,
    0x69,0x72,0x5b,0x31,0x34,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x36,0x33,0x33,0x36,0x34,0x36,0x30,0x31,0x31,0x33,0x35,0x32,0x35,0x33,0x39,0x30,
    0x36,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x37,0x37,0x33,0x32,0x31,0x37,0x39,0x37,
    0x36,0x30,0x39,0x33,0x32,0x39,0x32,0x32,0x33,0x36,0x33,0x32,0x38,0x31,0x32,0x35,
    0x2c,0x20,0x30,0x2e,0x30,0x32,0x35,0x30,0x33,0x35,0x39,0x39,0x39,0x37,0x31,0x35,
    0x33,0x32,0x38,0x32,0x31,0x36,0x35,0x35,0x32,0x37,0x33,0x34,0x33,0x37,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,
    0x31,0x35,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x36,0x32,0x34,
    0x36,0x37,0x33,0x30,0x30,0x38,0x39,0x31,0x38,0x37,0x36,0x32,0x32,0x30,0x37,0x30,
    0x33,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x37,0x32,0x30,0x33,0x30,0x35,0x39,
    0x37,0x39,0x32,0x35,0x31,0x38,0x36,0x31,0x35,0x37,0x32,0x32,0x36,0x35,0x36,0x32,
    0x35,0x2c,0x20,0x30,0x2e,0x33,0x30,0x31,0x35,0x36,0x36,0x30,0x30,0x34,0x37,0x35,
    0x33,0x31,0x31,0x32,0x37,0x39,0x32,0x39,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6b,
    0x64,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,
    0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,
    0x20,0x31,0x36,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6b,0x64,0x20,0x2b,0x3d,0x20,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x2d,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x5b,0x69,0x5d,0x29,0x2c,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x33,0x20,0x3d,0x20,0x6b,0x64,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x34,0x34,0x20,0x3d,0x20,0x5f,0x31,0x34,0x33,0x20,0x2a,0x20,0x30,0x2e,0x30,
    0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6b,0x64,0x20,0x3d,0x20,0x5f,0x31,
    0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x73,0x69,0x6e,
    0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x73,0x69,
    0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x20,0x2a,0x20,0x5f,0x31,0x34,0x34,
    0x29,0x29,0x20,0x2b,0x20,0x28,0x73,0x69,0x6e,0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,
    0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x69,0x6e,
    0x67,0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x29,0x29,0x2c,0x20,0x73,0x69,0x6e,0x67,
    0x6c,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before single_color.glsl.h"
#endif
static inline const sg_shader_desc* single_color_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "normal";
      desc.vs.source = single_color_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "single_color_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = single_color_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "single_color_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.label = "single_color_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "normal";
      desc.vs.source = single_color_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "single_color_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = single_color_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "single_color_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.label = "single_color_shader";
    }
    return &desc;
  }
  return 0;
}
