#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input /Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl --output /Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl.h --slang metal_macos:metal_ios:glsl330

    Overview:

        Shader program 'water_ripple':
            Get shader desc: water_ripple_shader_desc(sg_query_backend());
            Vertex shader: water_ripple_vs
                Attribute slots:
                    ATTR_water_ripple_vs_position = 0
                    ATTR_water_ripple_vs_texture_coord = 1
                Uniform block 'water_ripple_vs_params':
                    C struct: water_ripple_vs_params_t
                    Bind slot: SLOT_water_ripple_vs_params = 0
            Fragment shader: water_ripple_fs
                Uniform block 'water_ripple_fs_params':
                    C struct: water_ripple_fs_params_t
                    Bind slot: SLOT_water_ripple_fs_params = 0
                Image 'water_ripple_noise_tex':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_water_ripple_noise_tex = 0


    Shader descriptor structs:

        sg_shader water_ripple = sg_make_shader(water_ripple_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'water_ripple_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_water_ripple_vs_position] = { ... },
                    [ATTR_water_ripple_vs_texture_coord] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_water_ripple_noise_tex = 0;

    Bind slot and C-struct for uniform block 'water_ripple_vs_params':

        water_ripple_vs_params_t water_ripple_vs_params = {
            .mvp_mat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_water_ripple_vs_params, &SG_RANGE(water_ripple_vs_params));

    Bind slot and C-struct for uniform block 'water_ripple_fs_params':

        water_ripple_fs_params_t water_ripple_fs_params = {
            .t = ...;
            .uniform_color = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_water_ripple_fs_params, &SG_RANGE(water_ripple_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_water_ripple_vs_position (0)
#define ATTR_water_ripple_vs_texture_coord (1)
#define SLOT_water_ripple_noise_tex (0)
#define SLOT_water_ripple_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct water_ripple_vs_params_t {
    mat4 mvp_mat;
} water_ripple_vs_params_t;
#pragma pack(pop)
#define SLOT_water_ripple_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct water_ripple_fs_params_t {
    float t;
    uint8_t _pad_4[12];
    vec4 uniform_color;
} water_ripple_fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 water_ripple_vs_params[4];
    out vec2 frag_texture_coord;
    layout(location = 1) in vec2 texture_coord;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        frag_texture_coord = texture_coord;
        gl_Position = mat4(water_ripple_vs_params[0], water_ripple_vs_params[1], water_ripple_vs_params[2], water_ripple_vs_params[3]) * vec4(position, 1.0);
    }
    
*/
static const char water_ripple_vs_source_glsl330[379] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x61,0x74,0x65,0x72,
    0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,
    0x61,0x74,0x34,0x28,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x32,0x5d,0x2c,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,
    0x65,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 water_ripple_fs_params[2];
    uniform sampler2D water_ripple_noise_tex;
    
    in vec2 frag_texture_coord;
    layout(location = 0) out vec4 g_frag_color;
    
    void main()
    {
        vec4 _49 = texture(water_ripple_noise_tex, (vec2(frag_texture_coord.x, frag_texture_coord.y) * 0.300000011920928955078125) + vec2(0.20000000298023223876953125 * water_ripple_fs_params[0].x));
        float _60 = length(vec2(frag_texture_coord.x - 0.5, frag_texture_coord.y - 0.5));
        vec3 color = vec3(0.121568627655506134033203125, 0.603921592235565185546875, 0.67843139171600341796875);
        float alpha = 1.0;
        float _75 = 0.4000000059604644775390625 * water_ripple_fs_params[0].x;
        if ((_60 > (0.0500000007450580596923828125 + _75)) && (_60 < (0.07999999821186065673828125 + _75)))
        {
            color = water_ripple_fs_params[1].xyz;
            alpha = 0.5;
            if (water_ripple_fs_params[0].x > 0.800000011920928955078125)
            {
                alpha = (1.0 - water_ripple_fs_params[0].x) * 2.5;
            }
        }
        else
        {
            color = vec3(0.800000011920928955078125) * (0.5 + (0.5 * _49.x));
            alpha = (0.5 * water_ripple_fs_params[0].x) * (0.5 - _60);
        }
        g_frag_color = vec4(color, alpha);
    }
    
*/
static const char water_ripple_fs_source_glsl330[1215] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x77,0x61,0x74,0x65,0x72,
    0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,
    0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x3b,0x0a,
    0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x34,0x39,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,
    0x65,0x5f,0x74,0x65,0x78,0x2c,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x2c,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,
    0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,
    0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2a,0x20,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x30,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,
    0x74,0x68,0x28,0x76,0x65,0x63,0x32,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2d,0x20,0x30,
    0x2e,0x35,0x2c,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x32,0x31,0x35,0x36,0x38,
    0x36,0x32,0x37,0x36,0x35,0x35,0x35,0x30,0x36,0x31,0x33,0x34,0x30,0x33,0x33,0x32,
    0x30,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,0x33,0x39,0x32,0x31,0x35,
    0x39,0x32,0x32,0x33,0x35,0x35,0x36,0x35,0x31,0x38,0x35,0x35,0x34,0x36,0x38,0x37,
    0x35,0x2c,0x20,0x30,0x2e,0x36,0x37,0x38,0x34,0x33,0x31,0x33,0x39,0x31,0x37,0x31,
    0x36,0x30,0x30,0x33,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x37,0x35,0x20,0x3d,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,
    0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,
    0x35,0x20,0x2a,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x36,0x30,0x20,0x3e,0x20,
    0x28,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,
    0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,
    0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x20,0x26,0x26,0x20,0x28,0x5f,0x36,0x30,0x20,
    0x3c,0x20,0x28,0x30,0x2e,0x30,0x37,0x39,0x39,0x39,0x39,0x39,0x39,0x38,0x32,0x31,
    0x31,0x38,0x36,0x30,0x36,0x35,0x36,0x37,0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,
    0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x30,0x2e,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x38,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,
    0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x20,0x2a,0x20,0x32,0x2e,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,
    0x29,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x5f,0x34,0x39,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x20,0x2a,
    0x20,0x28,0x30,0x2e,0x35,0x20,0x2d,0x20,0x5f,0x36,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x2c,0x20,0x61,0x6c,0x70,0x68,0x61,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct water_ripple_vs_params
    {
        float4x4 mvp_mat;
    };
    
    struct main0_out
    {
        float2 frag_texture_coord [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float2 texture_coord [[attribute(1)]];
    };
    
    #line 16 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant water_ripple_vs_params& _27 [[buffer(0)]])
    {
        main0_out out = {};
    #line 16 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.frag_texture_coord = in.texture_coord;
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.gl_Position = _27.mvp_mat * float4(in.position, 1.0);
        return out;
    }
    
*/
static const char water_ripple_vs_source_metal_macos[839] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x6d,0x76,0x70,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x37,0x20,0x5b,0x5b,0x62,0x75,0x66,
    0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x69,0x6e,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x37,0x2e,0x6d,
    0x76,0x70,0x5f,0x6d,0x61,0x74,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,
    0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct water_ripple_fs_params
    {
        float t;
        float4 uniform_color;
    };
    
    struct main0_out
    {
        float4 g_frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float2 frag_texture_coord [[user(locn0)]];
    };
    
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant water_ripple_fs_params& _37 [[buffer(0)]], texture2d<float> water_ripple_noise_tex [[texture(0)]], sampler water_ripple_noise_texSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    #line 18 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float4 _49 = water_ripple_noise_tex.sample(water_ripple_noise_texSmplr, ((float2(in.frag_texture_coord.x, in.frag_texture_coord.y) * 0.300000011920928955078125) + float2(0.20000000298023223876953125 * _37.t)));
        float _60 = length(float2(in.frag_texture_coord.x - 0.5, in.frag_texture_coord.y - 0.5));
    #line 20 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float3 color = float3(0.121568627655506134033203125, 0.603921592235565185546875, 0.67843139171600341796875);
    #line 22 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float alpha = 1.0;
        float _75 = 0.4000000059604644775390625 * _37.t;
        if ((_60 > (0.0500000007450580596923828125 + _75)) && (_60 < (0.07999999821186065673828125 + _75)))
        {
    #line 26 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
            color = _37.uniform_color.xyz;
    #line 27 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
            alpha = 0.5;
            if (_37.t > 0.800000011920928955078125)
            {
                alpha = (1.0 - _37.t) * 2.5;
            }
        }
        else
        {
            color = float3(0.800000011920928955078125) * (0.5 + (0.5 * _49.x));
            alpha = (0.5 * _37.t) * (0.5 - _60);
        }
    #line 38 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.g_frag_color = float4(color, alpha);
        return out;
    }
    
*/
static const char water_ripple_fs_source_metal_macos[2152] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,
    0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,
    0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,
    0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,
    0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x33,0x37,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,
    0x5f,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,
    0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,0x55,0x73,
    0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,
    0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,
    0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,
    0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,
    0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x38,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x34,0x39,0x20,0x3d,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,
    0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x28,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,0x2c,
    0x20,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,
    0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x30,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,
    0x74,0x68,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,
    0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x32,0x30,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,
    0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,
    0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,
    0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x31,0x32,0x31,0x35,0x36,0x38,0x36,0x32,0x37,
    0x36,0x35,0x35,0x35,0x30,0x36,0x31,0x33,0x34,0x30,0x33,0x33,0x32,0x30,0x33,0x31,
    0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,0x33,0x39,0x32,0x31,0x35,0x39,0x32,0x32,
    0x33,0x35,0x35,0x36,0x35,0x31,0x38,0x35,0x35,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,
    0x30,0x2e,0x36,0x37,0x38,0x34,0x33,0x31,0x33,0x39,0x31,0x37,0x31,0x36,0x30,0x30,
    0x33,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x32,0x32,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,
    0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,
    0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,
    0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,
    0x35,0x20,0x3d,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x28,0x5f,0x36,0x30,0x20,0x3e,0x20,0x28,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,
    0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x20,
    0x26,0x26,0x20,0x28,0x5f,0x36,0x30,0x20,0x3c,0x20,0x28,0x30,0x2e,0x30,0x37,0x39,
    0x39,0x39,0x39,0x39,0x39,0x38,0x32,0x31,0x31,0x38,0x36,0x30,0x36,0x35,0x36,0x37,
    0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x36,0x20,
    0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,
    0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,
    0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,
    0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x32,0x37,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,
    0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,
    0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,
    0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,
    0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x33,0x37,0x2e,0x74,0x20,0x3e,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,
    0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,
    0x20,0x2a,0x20,0x32,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,
    0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,
    0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x34,0x39,0x2e,0x78,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,
    0x20,0x3d,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,
    0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x20,0x2d,0x20,0x5f,0x36,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x38,0x20,0x22,
    0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,
    0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,
    0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,
    0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,
    0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x61,0x6c,0x70,0x68,
    0x61,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct water_ripple_vs_params
    {
        float4x4 mvp_mat;
    };
    
    struct main0_out
    {
        float2 frag_texture_coord [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float2 texture_coord [[attribute(1)]];
    };
    
    #line 16 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant water_ripple_vs_params& _27 [[buffer(0)]])
    {
        main0_out out = {};
    #line 16 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.frag_texture_coord = in.texture_coord;
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.gl_Position = _27.mvp_mat * float4(in.position, 1.0);
        return out;
    }
    
*/
static const char water_ripple_vs_source_metal_ios[839] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x6d,0x76,0x70,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,
    0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,
    0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x37,0x20,0x5b,0x5b,0x62,0x75,0x66,
    0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x69,0x6e,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x37,0x2e,0x6d,
    0x76,0x70,0x5f,0x6d,0x61,0x74,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,
    0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct water_ripple_fs_params
    {
        float t;
        float4 uniform_color;
    };
    
    struct main0_out
    {
        float4 g_frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float2 frag_texture_coord [[user(locn0)]];
    };
    
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant water_ripple_fs_params& _37 [[buffer(0)]], texture2d<float> water_ripple_noise_tex [[texture(0)]], sampler water_ripple_noise_texSmplr [[sampler(0)]])
    {
        main0_out out = {};
    #line 17 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
    #line 18 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float4 _49 = water_ripple_noise_tex.sample(water_ripple_noise_texSmplr, ((float2(in.frag_texture_coord.x, in.frag_texture_coord.y) * 0.300000011920928955078125) + float2(0.20000000298023223876953125 * _37.t)));
        float _60 = length(float2(in.frag_texture_coord.x - 0.5, in.frag_texture_coord.y - 0.5));
    #line 20 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float3 color = float3(0.121568627655506134033203125, 0.603921592235565185546875, 0.67843139171600341796875);
    #line 22 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        float alpha = 1.0;
        float _75 = 0.4000000059604644775390625 * _37.t;
        if ((_60 > (0.0500000007450580596923828125 + _75)) && (_60 < (0.07999999821186065673828125 + _75)))
        {
    #line 26 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
            color = _37.uniform_color.xyz;
    #line 27 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
            alpha = 0.5;
            if (_37.t > 0.800000011920928955078125)
            {
                alpha = (1.0 - _37.t) * 2.5;
            }
        }
        else
        {
            color = float3(0.800000011920928955078125) * (0.5 + (0.5 * _49.x));
            alpha = (0.5 * _37.t) * (0.5 - _60);
        }
    #line 38 "/Users/michaelgerdes/code/minigolf/src/golf/shaders/water_ripple.glsl"
        out.g_frag_color = float4(color, alpha);
        return out;
    }
    
*/
static const char water_ripple_fs_source_metal_ios[2152] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,
    0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,
    0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,
    0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,
    0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x33,0x37,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,
    0x5f,0x74,0x65,0x78,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,
    0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,
    0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x2f,0x55,0x73,
    0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,
    0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,
    0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,
    0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,
    0x73,0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x38,0x20,0x22,0x2f,0x55,
    0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,
    0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,
    0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,
    0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x34,0x39,0x20,0x3d,0x20,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,
    0x6c,0x65,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x2e,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x28,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x53,0x6d,0x70,0x6c,0x72,0x2c,
    0x20,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x33,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,
    0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x30,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,
    0x74,0x68,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,
    0x20,0x2d,0x20,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,
    0x32,0x30,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,
    0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,
    0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,
    0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,
    0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,0x31,0x32,0x31,0x35,0x36,0x38,0x36,0x32,0x37,
    0x36,0x35,0x35,0x35,0x30,0x36,0x31,0x33,0x34,0x30,0x33,0x33,0x32,0x30,0x33,0x31,
    0x32,0x35,0x2c,0x20,0x30,0x2e,0x36,0x30,0x33,0x39,0x32,0x31,0x35,0x39,0x32,0x32,
    0x33,0x35,0x35,0x36,0x35,0x31,0x38,0x35,0x35,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,
    0x30,0x2e,0x36,0x37,0x38,0x34,0x33,0x31,0x33,0x39,0x31,0x37,0x31,0x36,0x30,0x30,
    0x33,0x34,0x31,0x37,0x39,0x36,0x38,0x37,0x35,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x32,0x32,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,
    0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,
    0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,
    0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,
    0x35,0x20,0x3d,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x35,0x39,
    0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,0x32,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x28,0x5f,0x36,0x30,0x20,0x3e,0x20,0x28,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,
    0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x20,
    0x26,0x26,0x20,0x28,0x5f,0x36,0x30,0x20,0x3c,0x20,0x28,0x30,0x2e,0x30,0x37,0x39,
    0x39,0x39,0x39,0x39,0x39,0x38,0x32,0x31,0x31,0x38,0x36,0x30,0x36,0x35,0x36,0x37,
    0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x20,0x2b,0x20,0x5f,0x37,0x35,0x29,0x29,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x32,0x36,0x20,
    0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,
    0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,
    0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,
    0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,
    0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x33,0x37,0x2e,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x23,
    0x6c,0x69,0x6e,0x65,0x20,0x32,0x37,0x20,0x22,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,
    0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,
    0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,
    0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,
    0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x33,0x37,0x2e,0x74,0x20,0x3e,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,
    0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,
    0x20,0x2a,0x20,0x32,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x30,0x2e,
    0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,
    0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x34,0x39,0x2e,0x78,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,
    0x20,0x3d,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x33,0x37,0x2e,0x74,0x29,
    0x20,0x2a,0x20,0x28,0x30,0x2e,0x35,0x20,0x2d,0x20,0x5f,0x36,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x33,0x38,0x20,0x22,
    0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x6d,0x69,0x63,0x68,0x61,0x65,0x6c,0x67,0x65,
    0x72,0x64,0x65,0x73,0x2f,0x63,0x6f,0x64,0x65,0x2f,0x6d,0x69,0x6e,0x69,0x67,0x6f,
    0x6c,0x66,0x2f,0x73,0x72,0x63,0x2f,0x67,0x6f,0x6c,0x66,0x2f,0x73,0x68,0x61,0x64,
    0x65,0x72,0x73,0x2f,0x77,0x61,0x74,0x65,0x72,0x5f,0x72,0x69,0x70,0x70,0x6c,0x65,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,
    0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x61,0x6c,0x70,0x68,
    0x61,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before water_ripple.glsl.h"
#endif
static inline const sg_shader_desc* water_ripple_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "texture_coord";
      desc.vs.source = water_ripple_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 64;
      desc.vs.uniform_blocks[0].uniforms[0].name = "water_ripple_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 4;
      desc.fs.source = water_ripple_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "water_ripple_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.fs.images[0].name = "water_ripple_noise_tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "water_ripple_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_MACOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = water_ripple_vs_source_metal_macos;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 64;
      desc.fs.source = water_ripple_fs_source_metal_macos;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.images[0].name = "water_ripple_noise_tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "water_ripple_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_IOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = water_ripple_vs_source_metal_ios;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 64;
      desc.fs.source = water_ripple_fs_source_metal_ios;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.images[0].name = "water_ripple_noise_tex";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "water_ripple_shader";
    }
    return &desc;
  }
  return 0;
}
