#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input data/shaders/occluded_ball.glsl --output src/golf/shaders/occluded_ball.glsl.h --slang glsl330:glsl300es:metal_macos:metal_ios:metal_sim

    Overview:

        Shader program 'occluded_ball':
            Get shader desc: occluded_ball_shader_desc(sg_query_backend());
            Vertex shader: occluded_ball_vs
                Attribute slots:
                    ATTR_occluded_ball_vs_position = 0
                    ATTR_occluded_ball_vs_normal = 1
                Uniform block 'occluded_ball_vs_params':
                    C struct: occluded_ball_vs_params_t
                    Bind slot: SLOT_occluded_ball_vs_params = 0
            Fragment shader: occluded_ball_fs
                Uniform block 'occluded_ball_fs_params':
                    C struct: occluded_ball_fs_params_t
                    Bind slot: SLOT_occluded_ball_fs_params = 0


    Shader descriptor structs:

        sg_shader occluded_ball = sg_make_shader(occluded_ball_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'occluded_ball_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_occluded_ball_vs_position] = { ... },
                    [ATTR_occluded_ball_vs_normal] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]


    Bind slot and C-struct for uniform block 'occluded_ball_vs_params':

        occluded_ball_vs_params_t occluded_ball_vs_params = {
            .model_mat = ...;
            .proj_view_mat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_occluded_ball_vs_params, &SG_RANGE(occluded_ball_vs_params));

    Bind slot and C-struct for uniform block 'occluded_ball_fs_params':

        occluded_ball_fs_params_t occluded_ball_fs_params = {
            .ball_position = ...;
            .cam_position = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_occluded_ball_fs_params, &SG_RANGE(occluded_ball_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_occluded_ball_vs_position (0)
#define ATTR_occluded_ball_vs_normal (1)
#define SLOT_occluded_ball_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct occluded_ball_vs_params_t {
    mat4 model_mat;
    mat4 proj_view_mat;
} occluded_ball_vs_params_t;
#pragma pack(pop)
#define SLOT_occluded_ball_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct occluded_ball_fs_params_t {
    vec4 ball_position;
    vec4 cam_position;
} occluded_ball_fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 occluded_ball_vs_params[8];
    out vec3 frag_normal;
    layout(location = 1) in vec3 normal;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        mat4 _21 = mat4(occluded_ball_vs_params[0], occluded_ball_vs_params[1], occluded_ball_vs_params[2], occluded_ball_vs_params[3]);
        frag_normal = normalize((inverse(transpose(_21)) * vec4(normal, 0.0)).xyz);
        gl_Position = (mat4(occluded_ball_vs_params[4], occluded_ball_vs_params[5], occluded_ball_vs_params[6], occluded_ball_vs_params[7]) * _21) * vec4(position, 1.0);
    }
    
*/
static const char occluded_ball_vs_source_glsl330[551] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x63,0x63,0x6c,0x75,
    0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,
    0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6f,0x63,0x63,0x6c,
    0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,
    0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,
    0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,
    0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x69,0x6e,0x76,0x65,0x72,0x73,
    0x65,0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x5f,0x32,0x31,0x29,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,
    0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x6f,0x63,0x63,
    0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,
    0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x31,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 occluded_ball_fs_params[2];
    in vec3 frag_normal;
    layout(location = 0) out vec4 g_frag_color;
    
    void main()
    {
        float _38 = min(max(dot(frag_normal, normalize(occluded_ball_fs_params[1].xyz - occluded_ball_fs_params[0].xyz)), 0.0), 1.0);
        float _44 = 0.20000000298023223876953125 + (0.5 * _38);
        g_frag_color = vec4(_44, _44, _44, 0.100000001490116119384765625 + (0.5 * (1.0 - _38)));
    }
    
*/
static const char occluded_ball_fs_source_glsl330[422] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x63,0x63,0x6c,0x75,
    0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x6d,0x61,0x78,0x28,0x64,
    0x6f,0x74,0x28,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6f,0x63,0x63,0x6c,0x75,0x64,
    0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x6f,0x63,0x63,0x6c,0x75,
    0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,
    0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,
    0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,
    0x33,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x34,0x34,
    0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,0x31,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,
    0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,
    0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x33,0x38,0x29,0x29,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 occluded_ball_vs_params[8];
    out vec3 frag_normal;
    layout(location = 1) in vec3 normal;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        mat4 _21 = mat4(occluded_ball_vs_params[0], occluded_ball_vs_params[1], occluded_ball_vs_params[2], occluded_ball_vs_params[3]);
        frag_normal = normalize((inverse(transpose(_21)) * vec4(normal, 0.0)).xyz);
        gl_Position = (mat4(occluded_ball_vs_params[4], occluded_ball_vs_params[5], occluded_ball_vs_params[6], occluded_ball_vs_params[7]) * _21) * vec4(position, 1.0);
    }
    
*/
static const char occluded_ball_vs_source_glsl300es[554] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x63,
    0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x74,0x34,0x20,0x5f,0x32,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,
    0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,
    0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,
    0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x69,0x6e,0x76,
    0x65,0x72,0x73,0x65,0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x5f,
    0x32,0x31,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,
    0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,
    0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,
    0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x6f,0x63,0x63,0x6c,
    0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x31,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 occluded_ball_fs_params[2];
    in highp vec3 frag_normal;
    layout(location = 0) out highp vec4 g_frag_color;
    
    void main()
    {
        highp float _38 = min(max(dot(frag_normal, normalize(occluded_ball_fs_params[1].xyz - occluded_ball_fs_params[0].xyz)), 0.0), 1.0);
        highp float _44 = 0.20000000298023223876953125 + (0.5 * _38);
        g_frag_color = vec4(_44, _44, _44, 0.100000001490116119384765625 + (0.5 * (1.0 - _38)));
    }
    
*/
static const char occluded_ball_fs_source_glsl300es[501] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,
    0x6d,0x69,0x6e,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x66,0x72,0x61,0x67,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,
    0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2d,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,
    0x6c,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,
    0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x5f,0x33,
    0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x34,0x34,0x2c,
    0x20,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x33,0x38,0x29,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_vs_params
    {
        float4x4 model_mat;
        float4x4 proj_view_mat;
    };
    
    struct main0_out
    {
        float3 frag_normal [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
    };
    
    // Returns the determinant of a 2x2 matrix.
    static inline __attribute__((always_inline))
    float spvDet2x2(float a1, float a2, float b1, float b2)
    {
        return a1 * b2 - b1 * a2;
    }
    
    // Returns the determinant of a 3x3 matrix.
    static inline __attribute__((always_inline))
    float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3)
    {
        return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3);
    }
    
    // Returns the inverse of a matrix, by using the algorithm of calculating the classical
    // adjoint and dividing by the determinant. The contents of the matrix are changed.
    static inline __attribute__((always_inline))
    float4x4 spvInverse4x4(float4x4 m)
    {
        float4x4 adj;	// The adjoint matrix (inverse after dividing by determinant)
    
        // Create the transpose of the cofactors, as the classical adjoint of the matrix.
        adj[0][0] =  spvDet3x3(m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][1] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][2] =  spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[3][1], m[3][2], m[3][3]);
        adj[0][3] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3]);
    
        adj[1][0] = -spvDet3x3(m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][1] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][2] = -spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[3][0], m[3][2], m[3][3]);
        adj[1][3] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3]);
    
        adj[2][0] =  spvDet3x3(m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][1] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][2] =  spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[3][0], m[3][1], m[3][3]);
        adj[2][3] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3]);
    
        adj[3][0] = -spvDet3x3(m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][1] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][2] = -spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[3][0], m[3][1], m[3][2]);
        adj[3][3] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2]);
    
        // Calculate the determinant as a combination of the cofactors of the first row.
        float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0]);
    
        // Divide the classical adjoint matrix by the determinant.
        // If determinant is zero, matrix is not invertable, so leave it unchanged.
        return (det != 0.0f) ? (adj * (1.0f / det)) : m;
    }
    
    #line 17 "data/shaders/occluded_ball.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant occluded_ball_vs_params& _16 [[buffer(0)]])
    {
        main0_out out = {};
    #line 17 "data/shaders/occluded_ball.glsl"
        out.frag_normal = normalize((spvInverse4x4(transpose(_16.model_mat)) * float4(in.normal, 0.0)).xyz);
    #line 18 "data/shaders/occluded_ball.glsl"
        out.gl_Position = (_16.proj_view_mat * _16.model_mat) * float4(in.position, 1.0);
        return out;
    }
    
*/
static const char occluded_ball_vs_source_metal_macos[3936] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,
    0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,
    0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x2f,0x2f,
    0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,
    0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,0x61,0x20,0x32,0x78,
    0x32,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,
    0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,0x2a,
    0x20,0x62,0x32,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x61,0x32,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,
    0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x61,0x20,0x33,0x78,0x33,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,
    0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,
    0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x62,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x33,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x61,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,0x32,
    0x28,0x62,0x32,0x2c,0x20,0x62,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,0x29,
    0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,
    0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,
    0x29,0x20,0x2b,0x20,0x63,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,
    0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x62,0x32,0x2c,0x20,0x62,
    0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,
    0x73,0x20,0x74,0x68,0x65,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x20,0x6f,0x66,
    0x20,0x61,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x62,0x79,0x20,0x75,0x73,
    0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x61,0x6c,0x67,0x6f,0x72,0x69,0x74,0x68,
    0x6d,0x20,0x6f,0x66,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x69,0x6e,0x67,
    0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,0x0a,0x2f,
    0x2f,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x61,0x6e,0x64,0x20,0x64,0x69,
    0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x20,0x54,0x68,0x65,0x20,0x63,
    0x6f,0x6e,0x74,0x65,0x6e,0x74,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x6d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x61,0x72,0x65,0x20,0x63,0x68,0x61,0x6e,0x67,0x65,
    0x64,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,
    0x72,0x73,0x65,0x34,0x78,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,
    0x34,0x20,0x61,0x64,0x6a,0x3b,0x09,0x2f,0x2f,0x20,0x54,0x68,0x65,0x20,0x61,0x64,
    0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x28,0x69,0x6e,
    0x76,0x65,0x72,0x73,0x65,0x20,0x61,0x66,0x74,0x65,0x72,0x20,0x64,0x69,0x76,0x69,
    0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,
    0x61,0x6e,0x74,0x29,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x72,0x65,
    0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,
    0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x2c,0x20,0x61,0x73,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,
    0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x74,0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x20,0x3d,
    0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,
    0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x31,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,
    0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x33,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,
    0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x20,
    0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x0a,
    0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,
    0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,
    0x20,0x61,0x73,0x20,0x61,0x20,0x63,0x6f,0x6d,0x62,0x69,0x6e,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x66,0x69,0x72,0x73,0x74,0x20,
    0x72,0x6f,0x77,0x2e,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x65,0x74,0x20,0x3d,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,
    0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x44,0x69,0x76,0x69,
    0x64,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,
    0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,
    0x6e,0x74,0x2e,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x49,0x66,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x69,0x73,0x20,0x7a,0x65,0x72,
    0x6f,0x2c,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x69,0x73,0x20,0x6e,0x6f,0x74,
    0x20,0x69,0x6e,0x76,0x65,0x72,0x74,0x61,0x62,0x6c,0x65,0x2c,0x20,0x73,0x6f,0x20,
    0x6c,0x65,0x61,0x76,0x65,0x20,0x69,0x74,0x20,0x75,0x6e,0x63,0x68,0x61,0x6e,0x67,
    0x65,0x64,0x2e,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,
    0x64,0x65,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x66,0x29,0x20,0x3f,0x20,0x28,
    0x61,0x64,0x6a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2f,0x20,0x64,0x65,
    0x74,0x29,0x29,0x20,0x3a,0x20,0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x36,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,
    0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,
    0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x28,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,0x72,0x73,0x65,0x34,0x78,0x34,
    0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x5f,0x31,0x36,0x2e,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x38,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x36,
    0x2e,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x61,0x74,0x20,0x2a,
    0x20,0x5f,0x31,0x36,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_fs_params
    {
        float4 ball_position;
        float4 cam_position;
    };
    
    struct main0_out
    {
        float4 g_frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 frag_normal [[user(locn0)]];
    };
    
    #line 16 "data/shaders/occluded_ball.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant occluded_ball_fs_params& _15 [[buffer(0)]])
    {
        main0_out out = {};
    #line 16 "data/shaders/occluded_ball.glsl"
    #line 17 "data/shaders/occluded_ball.glsl"
        float _38 = fast::min(fast::max(dot(in.frag_normal, normalize(_15.cam_position.xyz - _15.ball_position.xyz)), 0.0), 1.0);
        float _44 = 0.20000000298023223876953125 + (0.5 * _38);
        out.g_frag_color = float4(_44, _44, _44, 0.100000001490116119384765625 + (0.5 * (1.0 - _38)));
        return out;
    }
    
*/
static const char occluded_ball_fs_source_metal_macos[847] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x62,0x61,0x6c,0x6c,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x61,
    0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x5f,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,
    0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x36,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x35,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,
    0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,
    0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,
    0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,
    0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x31,0x35,0x2e,0x63,0x61,0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x5f,0x31,0x35,0x2e,0x62,0x61,0x6c,0x6c,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x30,0x2e,0x32,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,
    0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,
    0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,
    0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x5f,0x33,0x38,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_vs_params
    {
        float4x4 model_mat;
        float4x4 proj_view_mat;
    };
    
    struct main0_out
    {
        float3 frag_normal [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
    };
    
    // Returns the determinant of a 2x2 matrix.
    static inline __attribute__((always_inline))
    float spvDet2x2(float a1, float a2, float b1, float b2)
    {
        return a1 * b2 - b1 * a2;
    }
    
    // Returns the determinant of a 3x3 matrix.
    static inline __attribute__((always_inline))
    float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3)
    {
        return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3);
    }
    
    // Returns the inverse of a matrix, by using the algorithm of calculating the classical
    // adjoint and dividing by the determinant. The contents of the matrix are changed.
    static inline __attribute__((always_inline))
    float4x4 spvInverse4x4(float4x4 m)
    {
        float4x4 adj;	// The adjoint matrix (inverse after dividing by determinant)
    
        // Create the transpose of the cofactors, as the classical adjoint of the matrix.
        adj[0][0] =  spvDet3x3(m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][1] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][2] =  spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[3][1], m[3][2], m[3][3]);
        adj[0][3] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3]);
    
        adj[1][0] = -spvDet3x3(m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][1] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][2] = -spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[3][0], m[3][2], m[3][3]);
        adj[1][3] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3]);
    
        adj[2][0] =  spvDet3x3(m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][1] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][2] =  spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[3][0], m[3][1], m[3][3]);
        adj[2][3] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3]);
    
        adj[3][0] = -spvDet3x3(m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][1] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][2] = -spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[3][0], m[3][1], m[3][2]);
        adj[3][3] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2]);
    
        // Calculate the determinant as a combination of the cofactors of the first row.
        float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0]);
    
        // Divide the classical adjoint matrix by the determinant.
        // If determinant is zero, matrix is not invertable, so leave it unchanged.
        return (det != 0.0f) ? (adj * (1.0f / det)) : m;
    }
    
    #line 17 "data/shaders/occluded_ball.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant occluded_ball_vs_params& _16 [[buffer(0)]])
    {
        main0_out out = {};
    #line 17 "data/shaders/occluded_ball.glsl"
        out.frag_normal = normalize((spvInverse4x4(transpose(_16.model_mat)) * float4(in.normal, 0.0)).xyz);
    #line 18 "data/shaders/occluded_ball.glsl"
        out.gl_Position = (_16.proj_view_mat * _16.model_mat) * float4(in.position, 1.0);
        return out;
    }
    
*/
static const char occluded_ball_vs_source_metal_ios[3936] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,
    0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,
    0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x2f,0x2f,
    0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,
    0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,0x61,0x20,0x32,0x78,
    0x32,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,
    0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,0x2a,
    0x20,0x62,0x32,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x61,0x32,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,
    0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x61,0x20,0x33,0x78,0x33,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,
    0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,
    0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x62,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x33,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x61,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,0x32,
    0x28,0x62,0x32,0x2c,0x20,0x62,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,0x29,
    0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,
    0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,
    0x29,0x20,0x2b,0x20,0x63,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,
    0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x62,0x32,0x2c,0x20,0x62,
    0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,
    0x73,0x20,0x74,0x68,0x65,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x20,0x6f,0x66,
    0x20,0x61,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x62,0x79,0x20,0x75,0x73,
    0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x61,0x6c,0x67,0x6f,0x72,0x69,0x74,0x68,
    0x6d,0x20,0x6f,0x66,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x69,0x6e,0x67,
    0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,0x0a,0x2f,
    0x2f,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x61,0x6e,0x64,0x20,0x64,0x69,
    0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x20,0x54,0x68,0x65,0x20,0x63,
    0x6f,0x6e,0x74,0x65,0x6e,0x74,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x6d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x61,0x72,0x65,0x20,0x63,0x68,0x61,0x6e,0x67,0x65,
    0x64,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,
    0x72,0x73,0x65,0x34,0x78,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,
    0x34,0x20,0x61,0x64,0x6a,0x3b,0x09,0x2f,0x2f,0x20,0x54,0x68,0x65,0x20,0x61,0x64,
    0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x28,0x69,0x6e,
    0x76,0x65,0x72,0x73,0x65,0x20,0x61,0x66,0x74,0x65,0x72,0x20,0x64,0x69,0x76,0x69,
    0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,
    0x61,0x6e,0x74,0x29,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x72,0x65,
    0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,
    0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x2c,0x20,0x61,0x73,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,
    0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x74,0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x20,0x3d,
    0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,
    0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x31,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,
    0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x33,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,
    0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x20,
    0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x0a,
    0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,
    0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,
    0x20,0x61,0x73,0x20,0x61,0x20,0x63,0x6f,0x6d,0x62,0x69,0x6e,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x66,0x69,0x72,0x73,0x74,0x20,
    0x72,0x6f,0x77,0x2e,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x65,0x74,0x20,0x3d,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,
    0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x44,0x69,0x76,0x69,
    0x64,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,
    0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,
    0x6e,0x74,0x2e,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x49,0x66,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x69,0x73,0x20,0x7a,0x65,0x72,
    0x6f,0x2c,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x69,0x73,0x20,0x6e,0x6f,0x74,
    0x20,0x69,0x6e,0x76,0x65,0x72,0x74,0x61,0x62,0x6c,0x65,0x2c,0x20,0x73,0x6f,0x20,
    0x6c,0x65,0x61,0x76,0x65,0x20,0x69,0x74,0x20,0x75,0x6e,0x63,0x68,0x61,0x6e,0x67,
    0x65,0x64,0x2e,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,
    0x64,0x65,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x66,0x29,0x20,0x3f,0x20,0x28,
    0x61,0x64,0x6a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2f,0x20,0x64,0x65,
    0x74,0x29,0x29,0x20,0x3a,0x20,0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x36,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,
    0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,
    0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x28,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,0x72,0x73,0x65,0x34,0x78,0x34,
    0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x5f,0x31,0x36,0x2e,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x38,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x36,
    0x2e,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x61,0x74,0x20,0x2a,
    0x20,0x5f,0x31,0x36,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_fs_params
    {
        float4 ball_position;
        float4 cam_position;
    };
    
    struct main0_out
    {
        float4 g_frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 frag_normal [[user(locn0)]];
    };
    
    #line 16 "data/shaders/occluded_ball.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant occluded_ball_fs_params& _15 [[buffer(0)]])
    {
        main0_out out = {};
    #line 16 "data/shaders/occluded_ball.glsl"
    #line 17 "data/shaders/occluded_ball.glsl"
        float _38 = fast::min(fast::max(dot(in.frag_normal, normalize(_15.cam_position.xyz - _15.ball_position.xyz)), 0.0), 1.0);
        float _44 = 0.20000000298023223876953125 + (0.5 * _38);
        out.g_frag_color = float4(_44, _44, _44, 0.100000001490116119384765625 + (0.5 * (1.0 - _38)));
        return out;
    }
    
*/
static const char occluded_ball_fs_source_metal_ios[847] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x62,0x61,0x6c,0x6c,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x61,
    0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x5f,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,
    0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x36,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x35,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,
    0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,
    0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,
    0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,
    0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x31,0x35,0x2e,0x63,0x61,0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x5f,0x31,0x35,0x2e,0x62,0x61,0x6c,0x6c,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x30,0x2e,0x32,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,
    0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,
    0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,
    0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x5f,0x33,0x38,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"
    
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_vs_params
    {
        float4x4 model_mat;
        float4x4 proj_view_mat;
    };
    
    struct main0_out
    {
        float3 frag_normal [[user(locn0)]];
        float4 gl_Position [[position]];
    };
    
    struct main0_in
    {
        float3 position [[attribute(0)]];
        float3 normal [[attribute(1)]];
    };
    
    // Returns the determinant of a 2x2 matrix.
    static inline __attribute__((always_inline))
    float spvDet2x2(float a1, float a2, float b1, float b2)
    {
        return a1 * b2 - b1 * a2;
    }
    
    // Returns the determinant of a 3x3 matrix.
    static inline __attribute__((always_inline))
    float spvDet3x3(float a1, float a2, float a3, float b1, float b2, float b3, float c1, float c2, float c3)
    {
        return a1 * spvDet2x2(b2, b3, c2, c3) - b1 * spvDet2x2(a2, a3, c2, c3) + c1 * spvDet2x2(a2, a3, b2, b3);
    }
    
    // Returns the inverse of a matrix, by using the algorithm of calculating the classical
    // adjoint and dividing by the determinant. The contents of the matrix are changed.
    static inline __attribute__((always_inline))
    float4x4 spvInverse4x4(float4x4 m)
    {
        float4x4 adj;	// The adjoint matrix (inverse after dividing by determinant)
    
        // Create the transpose of the cofactors, as the classical adjoint of the matrix.
        adj[0][0] =  spvDet3x3(m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][1] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[2][1], m[2][2], m[2][3], m[3][1], m[3][2], m[3][3]);
        adj[0][2] =  spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[3][1], m[3][2], m[3][3]);
        adj[0][3] = -spvDet3x3(m[0][1], m[0][2], m[0][3], m[1][1], m[1][2], m[1][3], m[2][1], m[2][2], m[2][3]);
    
        adj[1][0] = -spvDet3x3(m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][1] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[2][0], m[2][2], m[2][3], m[3][0], m[3][2], m[3][3]);
        adj[1][2] = -spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[3][0], m[3][2], m[3][3]);
        adj[1][3] =  spvDet3x3(m[0][0], m[0][2], m[0][3], m[1][0], m[1][2], m[1][3], m[2][0], m[2][2], m[2][3]);
    
        adj[2][0] =  spvDet3x3(m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][1] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[2][0], m[2][1], m[2][3], m[3][0], m[3][1], m[3][3]);
        adj[2][2] =  spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[3][0], m[3][1], m[3][3]);
        adj[2][3] = -spvDet3x3(m[0][0], m[0][1], m[0][3], m[1][0], m[1][1], m[1][3], m[2][0], m[2][1], m[2][3]);
    
        adj[3][0] = -spvDet3x3(m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][1] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[2][0], m[2][1], m[2][2], m[3][0], m[3][1], m[3][2]);
        adj[3][2] = -spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[3][0], m[3][1], m[3][2]);
        adj[3][3] =  spvDet3x3(m[0][0], m[0][1], m[0][2], m[1][0], m[1][1], m[1][2], m[2][0], m[2][1], m[2][2]);
    
        // Calculate the determinant as a combination of the cofactors of the first row.
        float det = (adj[0][0] * m[0][0]) + (adj[0][1] * m[1][0]) + (adj[0][2] * m[2][0]) + (adj[0][3] * m[3][0]);
    
        // Divide the classical adjoint matrix by the determinant.
        // If determinant is zero, matrix is not invertable, so leave it unchanged.
        return (det != 0.0f) ? (adj * (1.0f / det)) : m;
    }
    
    #line 17 "data/shaders/occluded_ball.glsl"
    vertex main0_out main0(main0_in in [[stage_in]], constant occluded_ball_vs_params& _16 [[buffer(0)]])
    {
        main0_out out = {};
    #line 17 "data/shaders/occluded_ball.glsl"
        out.frag_normal = normalize((spvInverse4x4(transpose(_16.model_mat)) * float4(in.normal, 0.0)).xyz);
    #line 18 "data/shaders/occluded_ball.glsl"
        out.gl_Position = (_16.proj_view_mat * _16.model_mat) * float4(in.position, 1.0);
        return out;
    }
    
*/
static const char occluded_ball_vs_source_metal_sim[3936] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,
    0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,
    0x5f,0x6d,0x61,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,
    0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x2f,0x2f,
    0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,
    0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,0x61,0x20,0x32,0x78,
    0x32,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,
    0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,
    0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x32,0x78,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x62,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x31,0x20,0x2a,
    0x20,0x62,0x32,0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x61,0x32,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,0x73,0x20,0x74,0x68,0x65,
    0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x61,0x20,0x33,0x78,0x33,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,
    0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,
    0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x32,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,
    0x31,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x62,0x32,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x62,0x33,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x31,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x32,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x33,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x61,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,0x32,
    0x28,0x62,0x32,0x2c,0x20,0x62,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,0x29,
    0x20,0x2d,0x20,0x62,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,0x78,
    0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x63,0x32,0x2c,0x20,0x63,0x33,
    0x29,0x20,0x2b,0x20,0x63,0x31,0x20,0x2a,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x32,
    0x78,0x32,0x28,0x61,0x32,0x2c,0x20,0x61,0x33,0x2c,0x20,0x62,0x32,0x2c,0x20,0x62,
    0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x2f,0x2f,0x20,0x52,0x65,0x74,0x75,0x72,0x6e,
    0x73,0x20,0x74,0x68,0x65,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x20,0x6f,0x66,
    0x20,0x61,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x62,0x79,0x20,0x75,0x73,
    0x69,0x6e,0x67,0x20,0x74,0x68,0x65,0x20,0x61,0x6c,0x67,0x6f,0x72,0x69,0x74,0x68,
    0x6d,0x20,0x6f,0x66,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x69,0x6e,0x67,
    0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,0x0a,0x2f,
    0x2f,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x61,0x6e,0x64,0x20,0x64,0x69,
    0x76,0x69,0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x2e,0x20,0x54,0x68,0x65,0x20,0x63,
    0x6f,0x6e,0x74,0x65,0x6e,0x74,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x6d,
    0x61,0x74,0x72,0x69,0x78,0x20,0x61,0x72,0x65,0x20,0x63,0x68,0x61,0x6e,0x67,0x65,
    0x64,0x2e,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,
    0x72,0x73,0x65,0x34,0x78,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,
    0x34,0x20,0x61,0x64,0x6a,0x3b,0x09,0x2f,0x2f,0x20,0x54,0x68,0x65,0x20,0x61,0x64,
    0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x28,0x69,0x6e,
    0x76,0x65,0x72,0x73,0x65,0x20,0x61,0x66,0x74,0x65,0x72,0x20,0x64,0x69,0x76,0x69,
    0x64,0x69,0x6e,0x67,0x20,0x62,0x79,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,
    0x61,0x6e,0x74,0x29,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x72,0x65,
    0x61,0x74,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,
    0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x2c,0x20,0x61,0x73,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,
    0x69,0x63,0x61,0x6c,0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6f,0x66,0x20,
    0x74,0x68,0x65,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x2e,0x0a,0x20,0x20,0x20,0x20,
    0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,
    0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,
    0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,
    0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x20,0x3d,
    0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,
    0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x31,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,0x20,
    0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,
    0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,
    0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x31,0x5d,
    0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,
    0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,
    0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,
    0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x20,0x3d,0x20,
    0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,
    0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,
    0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x61,0x64,0x6a,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,
    0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x33,
    0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x33,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,
    0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,0x5d,0x2c,
    0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,
    0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,
    0x33,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,
    0x33,0x5d,0x5b,0x31,0x5d,0x20,0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,
    0x78,0x33,0x28,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,
    0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x31,0x5d,0x2c,0x20,
    0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,
    0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,
    0x32,0x5d,0x20,0x3d,0x20,0x2d,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,
    0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,
    0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,
    0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,
    0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,
    0x5b,0x33,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x32,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x64,0x6a,0x5b,0x33,0x5d,0x5b,0x33,0x5d,0x20,
    0x3d,0x20,0x20,0x73,0x70,0x76,0x44,0x65,0x74,0x33,0x78,0x33,0x28,0x6d,0x5b,0x30,
    0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,
    0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,0x5d,0x2c,
    0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x32,
    0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,
    0x5b,0x31,0x5d,0x2c,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x32,0x5d,0x29,0x3b,0x0a,0x0a,
    0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,
    0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,
    0x20,0x61,0x73,0x20,0x61,0x20,0x63,0x6f,0x6d,0x62,0x69,0x6e,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x66,0x61,0x63,0x74,0x6f,
    0x72,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x66,0x69,0x72,0x73,0x74,0x20,
    0x72,0x6f,0x77,0x2e,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x65,0x74,0x20,0x3d,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x30,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x31,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x31,0x5d,0x5b,0x30,
    0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,0x6a,0x5b,0x30,0x5d,0x5b,0x32,0x5d,0x20,
    0x2a,0x20,0x6d,0x5b,0x32,0x5d,0x5b,0x30,0x5d,0x29,0x20,0x2b,0x20,0x28,0x61,0x64,
    0x6a,0x5b,0x30,0x5d,0x5b,0x33,0x5d,0x20,0x2a,0x20,0x6d,0x5b,0x33,0x5d,0x5b,0x30,
    0x5d,0x29,0x3b,0x0a,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x44,0x69,0x76,0x69,
    0x64,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6c,0x61,0x73,0x73,0x69,0x63,0x61,0x6c,
    0x20,0x61,0x64,0x6a,0x6f,0x69,0x6e,0x74,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,
    0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x64,0x65,0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,
    0x6e,0x74,0x2e,0x0a,0x20,0x20,0x20,0x20,0x2f,0x2f,0x20,0x49,0x66,0x20,0x64,0x65,
    0x74,0x65,0x72,0x6d,0x69,0x6e,0x61,0x6e,0x74,0x20,0x69,0x73,0x20,0x7a,0x65,0x72,
    0x6f,0x2c,0x20,0x6d,0x61,0x74,0x72,0x69,0x78,0x20,0x69,0x73,0x20,0x6e,0x6f,0x74,
    0x20,0x69,0x6e,0x76,0x65,0x72,0x74,0x61,0x62,0x6c,0x65,0x2c,0x20,0x73,0x6f,0x20,
    0x6c,0x65,0x61,0x76,0x65,0x20,0x69,0x74,0x20,0x75,0x6e,0x63,0x68,0x61,0x6e,0x67,
    0x65,0x64,0x2e,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,
    0x64,0x65,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x66,0x29,0x20,0x3f,0x20,0x28,
    0x61,0x64,0x6a,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2f,0x20,0x64,0x65,
    0x74,0x29,0x29,0x20,0x3a,0x20,0x6d,0x3b,0x0a,0x7d,0x0a,0x0a,0x23,0x6c,0x69,0x6e,
    0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,
    0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,
    0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,
    0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,
    0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x36,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,
    0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,
    0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,
    0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x28,0x73,0x70,0x76,0x49,0x6e,0x76,0x65,0x72,0x73,0x65,0x34,0x78,0x34,
    0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x5f,0x31,0x36,0x2e,0x6d,
    0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x29,0x20,0x2a,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x38,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x5f,0x31,0x36,
    0x2e,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6d,0x61,0x74,0x20,0x2a,
    0x20,0x5f,0x31,0x36,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x5f,0x6d,0x61,0x74,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>
    
    using namespace metal;
    
    struct occluded_ball_fs_params
    {
        float4 ball_position;
        float4 cam_position;
    };
    
    struct main0_out
    {
        float4 g_frag_color [[color(0)]];
    };
    
    struct main0_in
    {
        float3 frag_normal [[user(locn0)]];
    };
    
    #line 16 "data/shaders/occluded_ball.glsl"
    fragment main0_out main0(main0_in in [[stage_in]], constant occluded_ball_fs_params& _15 [[buffer(0)]])
    {
        main0_out out = {};
    #line 16 "data/shaders/occluded_ball.glsl"
    #line 17 "data/shaders/occluded_ball.glsl"
        float _38 = fast::min(fast::max(dot(in.frag_normal, normalize(_15.cam_position.xyz - _15.ball_position.xyz)), 0.0), 1.0);
        float _44 = 0.20000000298023223876953125 + (0.5 * _38);
        out.g_frag_color = float4(_44, _44, _44, 0.100000001490116119384765625 + (0.5 * (1.0 - _38)));
        return out;
    }
    
*/
static const char occluded_ball_fs_source_metal_sim[847] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x62,0x61,0x6c,0x6c,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x61,
    0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x5f,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x63,0x6f,0x6c,
    0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x23,0x6c,0x69,0x6e,0x65,
    0x20,0x31,0x36,0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,
    0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,
    0x67,0x6c,0x73,0x6c,0x22,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x20,0x6f,0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x35,0x20,0x5b,
    0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x36,
    0x20,0x22,0x64,0x61,0x74,0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,
    0x63,0x63,0x6c,0x75,0x64,0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,
    0x6c,0x22,0x0a,0x23,0x6c,0x69,0x6e,0x65,0x20,0x31,0x37,0x20,0x22,0x64,0x61,0x74,
    0x61,0x2f,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2f,0x6f,0x63,0x63,0x6c,0x75,0x64,
    0x65,0x64,0x5f,0x62,0x61,0x6c,0x6c,0x2e,0x67,0x6c,0x73,0x6c,0x22,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x69,0x6e,0x2e,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x31,0x35,0x2e,0x63,0x61,0x6d,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x5f,0x31,0x35,0x2e,0x62,0x61,0x6c,0x6c,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x30,0x2e,0x32,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,
    0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,
    0x2a,0x20,0x5f,0x33,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x34,0x34,0x2c,0x20,
    0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,
    0x32,0x35,0x20,0x2b,0x20,0x28,0x30,0x2e,0x35,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x5f,0x33,0x38,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before occluded_ball.glsl.h"
#endif
static inline const sg_shader_desc* occluded_ball_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "normal";
      desc.vs.source = occluded_ball_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "occluded_ball_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = occluded_ball_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "occluded_ball_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.label = "occluded_ball_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "normal";
      desc.vs.source = occluded_ball_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "occluded_ball_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = occluded_ball_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "occluded_ball_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.label = "occluded_ball_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_MACOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = occluded_ball_vs_source_metal_macos;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 128;
      desc.fs.source = occluded_ball_fs_source_metal_macos;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 32;
      desc.label = "occluded_ball_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_IOS) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = occluded_ball_vs_source_metal_ios;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 128;
      desc.fs.source = occluded_ball_fs_source_metal_ios;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 32;
      desc.label = "occluded_ball_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_METAL_SIMULATOR) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.vs.source = occluded_ball_vs_source_metal_sim;
      desc.vs.entry = "main0";
      desc.vs.uniform_blocks[0].size = 128;
      desc.fs.source = occluded_ball_fs_source_metal_sim;
      desc.fs.entry = "main0";
      desc.fs.uniform_blocks[0].size = 32;
      desc.label = "occluded_ball_shader";
    }
    return &desc;
  }
  return 0;
}
