#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input data/shaders/hole_editor_water.glsl --output src/golf/shaders/hole_editor_water.glsl.h --slang glsl330:glsl300es

    Overview:

        Shader program 'hole_editor_water':
            Get shader desc: hole_editor_water_shader_desc(sg_query_backend());
            Vertex shader: hole_editor_water_vs
                Attribute slots:
                    ATTR_hole_editor_water_vs_position = 0
                    ATTR_hole_editor_water_vs_texture_coord = 1
                    ATTR_hole_editor_water_vs_lightmap_uv = 2
                Uniform block 'hole_editor_water_vs_params':
                    C struct: hole_editor_water_vs_params_t
                    Bind slot: SLOT_hole_editor_water_vs_params = 0
            Fragment shader: hole_editor_water_fs
                Uniform block 'hole_editor_water_fs_params':
                    C struct: hole_editor_water_fs_params_t
                    Bind slot: SLOT_hole_editor_water_fs_params = 0
                Image 'ce_water_noise_tex1':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ce_water_noise_tex1 = 0
                Image 'ce_water_noise_tex0':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ce_water_noise_tex0 = 1
                Image 'ce_water_lightmap_tex':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_ce_water_lightmap_tex = 2


    Shader descriptor structs:

        sg_shader hole_editor_water = sg_make_shader(hole_editor_water_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'hole_editor_water_vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_hole_editor_water_vs_position] = { ... },
                    [ATTR_hole_editor_water_vs_texture_coord] = { ... },
                    [ATTR_hole_editor_water_vs_lightmap_uv] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_ce_water_noise_tex1 = 0;
        SLOT_ce_water_noise_tex0 = 1;
        SLOT_ce_water_lightmap_tex = 2;

    Bind slot and C-struct for uniform block 'hole_editor_water_vs_params':

        hole_editor_water_vs_params_t hole_editor_water_vs_params = {
            .proj_view_mat = ...;
            .model_mat = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_hole_editor_water_vs_params, &SG_RANGE(hole_editor_water_vs_params));

    Bind slot and C-struct for uniform block 'hole_editor_water_fs_params':

        hole_editor_water_fs_params_t hole_editor_water_fs_params = {
            .draw_type = ...;
            .t = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_hole_editor_water_fs_params, &SG_RANGE(hole_editor_water_fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_hole_editor_water_vs_position (0)
#define ATTR_hole_editor_water_vs_texture_coord (1)
#define ATTR_hole_editor_water_vs_lightmap_uv (2)
#define SLOT_ce_water_noise_tex1 (0)
#define SLOT_ce_water_noise_tex0 (1)
#define SLOT_ce_water_lightmap_tex (2)
#define SLOT_hole_editor_water_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct hole_editor_water_vs_params_t {
    mat4 proj_view_mat;
    mat4 model_mat;
} hole_editor_water_vs_params_t;
#pragma pack(pop)
#define SLOT_hole_editor_water_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct hole_editor_water_fs_params_t {
    float draw_type;
    float t;
    uint8_t _pad_8[8];
} hole_editor_water_fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 hole_editor_water_vs_params[8];
    out vec2 frag_texture_coord;
    layout(location = 1) in vec2 texture_coord;
    out vec2 frag_lightmap_uv;
    layout(location = 2) in vec2 lightmap_uv;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        frag_texture_coord = texture_coord;
        frag_lightmap_uv = lightmap_uv;
        gl_Position = (mat4(hole_editor_water_vs_params[0], hole_editor_water_vs_params[1], hole_editor_water_vs_params[2], hole_editor_water_vs_params[3]) * mat4(hole_editor_water_vs_params[4], hole_editor_water_vs_params[5], hole_editor_water_vs_params[6], hole_editor_water_vs_params[7])) * vec4(position, 1.0);
    }
    
*/
static const char hole_editor_water_vs_source_glsl330[646] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x68,0x6f,0x6c,0x65,0x5f,
    0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x20,0x3d,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,
    0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,
    0x5d,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x68,0x6f,0x6c,0x65,0x5f,0x65,
    0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,
    0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,
    0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,
    0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 hole_editor_water_fs_params[1];
    uniform sampler2D ce_water_noise_tex1;
    uniform sampler2D ce_water_noise_tex0;
    uniform sampler2D ce_water_lightmap_tex;
    
    in vec2 frag_texture_coord;
    in vec2 frag_lightmap_uv;
    layout(location = 0) out vec4 g_frag_color;
    
    void main()
    {
        vec4 _54 = texture(ce_water_noise_tex1, vec2(frag_texture_coord.x, 0.100000001490116119384765625 * (frag_texture_coord.y + (16.0 * hole_editor_water_fs_params[0].y))));
        vec3 color = vec3(0.0039215688593685626983642578125, 0.4862745106220245361328125, 0.56078433990478515625);
        if (texture(ce_water_noise_tex0, vec2(frag_texture_coord.x, frag_texture_coord.y + hole_editor_water_fs_params[0].y)).w > 0.100000001490116119384765625)
        {
            color = vec3(0.60000002384185791015625);
        }
        if (_54.w > 0.100000001490116119384765625)
        {
            color = vec3(0.800000011920928955078125);
        }
        if (frag_texture_coord.x > 0.949999988079071044921875)
        {
            float _94 = (frag_texture_coord.x - 0.949999988079071044921875) * 20.0;
            color = (vec3(1.0) * _94) + (color * (1.0 - _94));
        }
        if (frag_texture_coord.x < 0.0500000007450580596923828125)
        {
            float _113 = (0.0500000007450580596923828125 - frag_texture_coord.x) * 20.0;
            color = (vec3(1.0) * _113) + (color * (1.0 - _113));
        }
        vec4 _126 = texture(ce_water_lightmap_tex, frag_lightmap_uv);
        float _127 = _126.x;
        int _131 = int(hole_editor_water_fs_params[0].x);
        if (_131 == 0)
        {
            g_frag_color = vec4(color * _127, 0.85000002384185791015625);
        }
        else
        {
            if (_131 == 1)
            {
                g_frag_color = vec4(color, 0.85000002384185791015625);
            }
            else
            {
                if (_131 == 2)
                {
                    g_frag_color = vec4(_127, _127, _127, 0.85000002384185791015625);
                }
                else
                {
                    if (_131 == 3)
                    {
                        g_frag_color = vec4(frag_lightmap_uv, 0.0, 0.85000002384185791015625);
                    }
                }
            }
        }
    }
    
*/
static const char hole_editor_water_fs_source_glsl330[2088] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x68,0x6f,0x6c,0x65,0x5f,
    0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,0x65,0x5f,
    0x77,0x61,0x74,0x65,0x72,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x31,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x6e,0x6f,0x69,
    0x73,0x65,0x5f,0x74,0x65,0x78,0x30,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,0x65,0x5f,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x74,0x65,0x78,
    0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x35,0x34,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x65,0x5f,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x31,0x2c,0x20,
    0x76,0x65,0x63,0x32,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x30,0x2e,0x31,0x30,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,
    0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2a,0x20,0x28,0x66,0x72,0x61,0x67,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,
    0x20,0x2b,0x20,0x28,0x31,0x36,0x2e,0x30,0x20,0x2a,0x20,0x68,0x6f,0x6c,0x65,0x5f,
    0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,
    0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,
    0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x34,0x38,0x36,0x32,
    0x37,0x34,0x35,0x31,0x30,0x36,0x32,0x32,0x30,0x32,0x34,0x35,0x33,0x36,0x31,0x33,
    0x32,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x35,0x36,0x30,0x37,0x38,0x34,0x33,
    0x33,0x39,0x39,0x30,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,
    0x65,0x78,0x30,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,
    0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x29,0x2e,0x77,0x20,0x3e,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x36,0x30,0x30,0x30,0x30,0x30,
    0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x35,0x34,0x2e,0x77,0x20,0x3e,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,
    0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,
    0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,
    0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,
    0x64,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x39,0x34,0x39,0x39,0x39,0x39,0x39,0x38,
    0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,0x28,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x20,0x2d,0x20,0x30,0x2e,0x39,0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,
    0x37,0x39,0x30,0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x20,
    0x2a,0x20,0x32,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x5f,0x39,0x34,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x39,0x34,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,
    0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,
    0x38,0x32,0x38,0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x33,
    0x20,0x3d,0x20,0x28,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,
    0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,
    0x32,0x35,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x29,0x20,0x2a,0x20,0x32,0x30,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,
    0x5f,0x31,0x31,0x33,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,
    0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x31,0x31,0x33,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x32,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x65,
    0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,
    0x74,0x65,0x78,0x2c,0x20,0x66,0x72,0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,
    0x61,0x70,0x5f,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x32,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x36,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x31,0x20,0x3d,0x20,
    0x69,0x6e,0x74,0x28,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,
    0x77,0x61,0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x31,0x33,0x31,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,
    0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,
    0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x33,0x31,0x20,0x3d,0x3d,0x20,0x31,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,
    0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x31,0x33,0x31,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x32,
    0x37,0x2c,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x30,
    0x2e,0x38,0x35,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,
    0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x33,0x31,
    0x20,0x3d,0x3d,0x20,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x66,0x72,0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,
    0x76,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,0x30,0x30,
    0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 hole_editor_water_vs_params[8];
    out vec2 frag_texture_coord;
    layout(location = 1) in vec2 texture_coord;
    out vec2 frag_lightmap_uv;
    layout(location = 2) in vec2 lightmap_uv;
    layout(location = 0) in vec3 position;
    
    void main()
    {
        frag_texture_coord = texture_coord;
        frag_lightmap_uv = lightmap_uv;
        gl_Position = (mat4(hole_editor_water_vs_params[0], hole_editor_water_vs_params[1], hole_editor_water_vs_params[2], hole_editor_water_vs_params[3]) * mat4(hole_editor_water_vs_params[4], hole_editor_water_vs_params[5], hole_editor_water_vs_params[6], hole_editor_water_vs_params[7])) * vec4(position, 1.0);
    }
    
*/
static const char hole_editor_water_vs_source_glsl300es[649] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x68,0x6f,
    0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x20,0x3d,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x28,0x6d,0x61,0x74,0x34,0x28,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,
    0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,
    0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,
    0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x32,0x5d,0x2c,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,
    0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x68,0x6f,0x6c,
    0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x68,0x6f,0x6c,
    0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x68,0x6f,0x6c,
    0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x68,0x6f,0x6c,
    0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    uniform highp vec4 hole_editor_water_fs_params[1];
    uniform highp sampler2D ce_water_noise_tex1;
    uniform highp sampler2D ce_water_noise_tex0;
    uniform highp sampler2D ce_water_lightmap_tex;
    
    in highp vec2 frag_texture_coord;
    in highp vec2 frag_lightmap_uv;
    layout(location = 0) out highp vec4 g_frag_color;
    
    void main()
    {
        highp vec4 _54 = texture(ce_water_noise_tex1, vec2(frag_texture_coord.x, 0.100000001490116119384765625 * (frag_texture_coord.y + (16.0 * hole_editor_water_fs_params[0].y))));
        highp vec3 color = vec3(0.0039215688593685626983642578125, 0.4862745106220245361328125, 0.56078433990478515625);
        if (texture(ce_water_noise_tex0, vec2(frag_texture_coord.x, frag_texture_coord.y + hole_editor_water_fs_params[0].y)).w > 0.100000001490116119384765625)
        {
            color = vec3(0.60000002384185791015625);
        }
        if (_54.w > 0.100000001490116119384765625)
        {
            color = vec3(0.800000011920928955078125);
        }
        if (frag_texture_coord.x > 0.949999988079071044921875)
        {
            highp float _94 = (frag_texture_coord.x - 0.949999988079071044921875) * 20.0;
            color = (vec3(1.0) * _94) + (color * (1.0 - _94));
        }
        if (frag_texture_coord.x < 0.0500000007450580596923828125)
        {
            highp float _113 = (0.0500000007450580596923828125 - frag_texture_coord.x) * 20.0;
            color = (vec3(1.0) * _113) + (color * (1.0 - _113));
        }
        highp vec4 _126 = texture(ce_water_lightmap_tex, frag_lightmap_uv);
        highp float _127 = _126.x;
        int _131 = int(hole_editor_water_fs_params[0].x);
        if (_131 == 0)
        {
            g_frag_color = vec4(color * _127, 0.85000002384185791015625);
        }
        else
        {
            if (_131 == 1)
            {
                g_frag_color = vec4(color, 0.85000002384185791015625);
            }
            else
            {
                if (_131 == 2)
                {
                    g_frag_color = vec4(_127, _127, _127, 0.85000002384185791015625);
                }
                else
                {
                    if (_131 == 3)
                    {
                        g_frag_color = vec4(frag_lightmap_uv, 0.0, 0.85000002384185791015625);
                    }
                }
            }
        }
    }
    
*/
static const char hole_editor_water_fs_source_glsl300es[2215] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,
    0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,0x65,0x5f,0x77,0x61,0x74,
    0x65,0x72,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x31,0x3b,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x30,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x6d,0x61,0x70,0x5f,0x74,0x65,0x78,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x35,
    0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x65,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x31,0x2c,
    0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x30,0x2e,0x31,0x30,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,
    0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x20,0x2a,0x20,0x28,0x66,0x72,0x61,
    0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,
    0x79,0x20,0x2b,0x20,0x28,0x31,0x36,0x2e,0x30,0x20,0x2a,0x20,0x68,0x6f,0x6c,0x65,
    0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x29,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,
    0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x34,0x38,0x36,0x32,0x37,0x34,0x35,0x31,0x30,0x36,0x32,0x32,0x30,
    0x32,0x34,0x35,0x33,0x36,0x31,0x33,0x32,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,
    0x35,0x36,0x30,0x37,0x38,0x34,0x33,0x33,0x39,0x39,0x30,0x34,0x37,0x38,0x35,0x31,
    0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x6e,0x6f,0x69,0x73,0x65,0x5f,0x74,0x65,0x78,0x30,0x2c,0x20,0x76,0x65,0x63,0x32,
    0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x2b,0x20,0x68,0x6f,
    0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x29,
    0x2e,0x77,0x20,0x3e,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,
    0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,
    0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x36,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,
    0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x34,0x2e,0x77,0x20,0x3e,
    0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,
    0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x3e,0x20,0x30,0x2e,0x39,
    0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,0x37,0x31,0x30,0x34,
    0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,0x28,0x66,0x72,0x61,0x67,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2d,
    0x20,0x30,0x2e,0x39,0x34,0x39,0x39,0x39,0x39,0x39,0x38,0x38,0x30,0x37,0x39,0x30,
    0x37,0x31,0x30,0x34,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x20,0x2a,0x20,0x32,
    0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,
    0x2a,0x20,0x5f,0x39,0x34,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x39,0x34,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x72,
    0x61,0x67,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,
    0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,
    0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,
    0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x31,0x33,0x20,0x3d,0x20,0x28,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,
    0x32,0x38,0x31,0x32,0x35,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x29,0x20,0x2a,0x20,
    0x32,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,
    0x20,0x2a,0x20,0x5f,0x31,0x31,0x33,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x31,0x31,0x33,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x32,0x36,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x65,0x5f,0x77,0x61,0x74,0x65,0x72,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x74,0x65,0x78,0x2c,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x32,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x36,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x31,0x20,0x3d,0x20,0x69,
    0x6e,0x74,0x28,0x68,0x6f,0x6c,0x65,0x5f,0x65,0x64,0x69,0x74,0x6f,0x72,0x5f,0x77,
    0x61,0x74,0x65,0x72,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,
    0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,
    0x33,0x31,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x2a,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,0x30,
    0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,
    0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x33,0x31,0x20,0x3d,0x3d,0x20,0x31,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,
    0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,
    0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x31,0x33,0x31,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x32,0x37,
    0x2c,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x5f,0x31,0x32,0x37,0x2c,0x20,0x30,0x2e,
    0x38,0x35,0x30,0x30,0x30,0x30,0x30,0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,
    0x31,0x30,0x31,0x35,0x36,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x33,0x31,0x20,
    0x3d,0x3d,0x20,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x5f,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x66,0x72,0x61,0x67,0x5f,0x6c,0x69,0x67,0x68,0x74,0x6d,0x61,0x70,0x5f,0x75,0x76,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x38,0x35,0x30,0x30,0x30,0x30,0x30,
    0x32,0x33,0x38,0x34,0x31,0x38,0x35,0x37,0x39,0x31,0x30,0x31,0x35,0x36,0x32,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before hole_editor_water.glsl.h"
#endif
static inline const sg_shader_desc* hole_editor_water_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "texture_coord";
      desc.attrs[2].name = "lightmap_uv";
      desc.vs.source = hole_editor_water_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "hole_editor_water_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = hole_editor_water_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].uniforms[0].name = "hole_editor_water_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "ce_water_noise_tex1";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "ce_water_noise_tex0";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "ce_water_lightmap_tex";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "hole_editor_water_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "position";
      desc.attrs[1].name = "texture_coord";
      desc.attrs[2].name = "lightmap_uv";
      desc.vs.source = hole_editor_water_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 128;
      desc.vs.uniform_blocks[0].uniforms[0].name = "hole_editor_water_vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 8;
      desc.fs.source = hole_editor_water_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].uniforms[0].name = "hole_editor_water_fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "ce_water_noise_tex1";
      desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "ce_water_noise_tex0";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "ce_water_lightmap_tex";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "hole_editor_water_shader";
    }
    return &desc;
  }
  return 0;
}
