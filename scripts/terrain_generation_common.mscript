import "math.mscript";

struct terrain_model_face {
    int mat_idx, smooth_normal;
    int x, y, z, w;
    float tex_coord_scale;
    float cor, friction, vel_scale;
    int auto_texture;
}

void generate(int N, float height, float width, float length, 
        vec2 texture_size, vec2 texture_delta,
        vec2 bp0, vec2 bp1, vec2 bp2, vec2 bp3,
        float ground_friction, float ground_cor, float ground_vel_scale) {
    int i;
    vec3[] points = [];

    float total_dist = 0.0;
    vec2 p0 = vec2(0.0, 0.0);

    for (i = 0; i < N + 1; i++) {
        float t = (i + 0.0) / N;
        vec2 bp = vec2_bezier(bp0, bp1, bp2, bp3, t);
        float x0 = 0.0;
        float x1 = width;
        float y = height * bp.y;
        float z = length * bz.x;

        points[points.length] = vec3(x0, y, z);
        points[points.length] = vec3(x1, y, z);

        vec2 p1 = vec2(z, y);
        total_dist = total_dist + vec2_dist(p0, p1); 
        p0 = p1;
    }
}
