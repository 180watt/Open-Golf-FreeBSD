import "math.mscript";
import "util.mscript";
import "terrain_generation_common.mscript";

int fib1(int n) {
    if (n <= 0) {
        return 0;
    }
    else if (n == 1) {
        return 1;
    }
    else {
        return fib1(n - 1) + fib2(n - 2);
    }
}

int fib2(int n) {
    if (n <= 0) {
        return 0;
    }
    else if (n == 1) {
        return 1;
    }
    else {
        return fib2(n - 1) + fib1(n - 2);
    }
}

int fib(int n, int x) {
    if (n <= zero()) {
        return zero();
    }
    else if (n == one()) {
        return one();
    }
    else {
        return fib1(n - one()) + fib2(n - two());
    }
}

int zero() {
    return 0;
}

int one() {
    return 1;
}

int two() {
    return 2;
}

vec3[] create_array(int n) {
    vec3[] a = [];
    int i;
    for (i = 0; i < n; i++) {
        a[i] = { x = 3.0 * i + 0.0, y = 3.0 * i + 1.0, z = 3.0 * i + 2.0 };
    }
    return a;
}

vec3 sum_array(vec3[] array) {
    vec3 sum = { x = 0, y = 0, z = 0 };
    int i;
    for (i = 0; i < array.length; i++) {
        sum = vec3_add(sum, array[i]);
    }
    return sum;
}

void double_array(vec3[] array) {
    int i;
    for (i = 0; i < array.length; i++) {
        array[i] = vec3_scale(array[i], 2.0);
    }
}

void print_array(vec3[] array) {
    print("[");
    int i;
    for (i = 0; i < array.length; i++) {
        print(array[i]);
        if (i != array.length - 1) {
            print(", ");
        }
    }
    print("]\n");
}

bool inited = false;
int stuff = 10;
vec3 things = { x = 1, y = 2, z = 3 };
int[] stuffs = NULL;

int run(int n0, int n1) {
    int i;
    if (!inited) {
        stuffs = [];
        for (i = 0; i <= 100; i++) {
            stuffs[stuffs.length] = 5 * i;
        }
        inited = true;
    }

    int n = n0 + n1; 

    float ss = 16.0;
    ss = c_sqrt(ss);
    print("ss = ", ss, "\n");

    print("stuff = ", stuff, "\n");
    stuff = stuff + 100;

    print("things = ", things, "\n");
    things = vec3_add(things, { x = 1, y = 2, z = 3 });

    print("fib(10) = ", fib(10, 1), "\n");

    vec3[] a = create_array(n);
    print("a.length = ", a.length, "\n");
    //print_array(a);
    double_array(a);
    vec3 sum = sum_array(a);
    delete_array(a);
    
    for (i = 0; i < stuffs.length; i++) {
        print(i, ": ", stuffs[i], "\n");
        stuffs[i] += 5;
    }

    return sum.x + sum.y + sum.z;
}
