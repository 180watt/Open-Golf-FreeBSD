import "math.mscript";
import "util.mscript";
import "terrain_generation_common.mscript";

int fib(int n) {
    if (n <= zero()) {
        return zero();
    }
    else if (n == one()) {
        return one();
    }
    else {
        return fib(n - one()) + fib(n - two());
    }
}

int zero() {
    return 0;
}

int one() {
    return 1;
}

int two() {
    return 2;
}

vec3[] create_array(int n) {
    vec3[] a = [];
    int i;
    for (i = 0; i < n; i++) {
        a[i] = { x = 3 * i + 0, y = 3 * i + 1, z = 3 * i + 2 };
    }
    return a;
}

vec3 sum_array(vec3[] array) {
    vec3 sum = { x = 0, y = 0, z = 0 };
    int i;
    for (i = 0; i < array.length; i++) {
        sum = vec3_add(sum, array[i]);
    }
    return sum;
}

void double_array(vec3[] array) {
    int i;
    for (i = 0; i < array.length; i++) {
        array[i] = vec3_scale(array[i], 2.0);
    }
}

void print_array(vec3[] array) {
    print("[");
    int i;
    for (i = 0; i < array.length; i++) {
        print(array[i]);
        if (i != array.length - 1) {
            print(", ");
        }
    }
    print("]\n");
}

int run(int n) {
    {
        ui_state state = UI_STATE_MAIN;
        print_ui_state(state);
        print("\n");
        if (state == UI_STATE_MAIN) {
            state = UI_STATE_SETTINGS;
        }
        print_ui_state(state);
        print("\n");
        if (state == UI_STATE_SETTINGS) {
            state = UI_STATE_MAIN;
        }
        print_ui_state(state);
        print("\n");
    }

    {
        int[] testing = NULL;

        if (!testing) {
            print("YES NULL\n");
        }
        else {
            print("NO NULL\n");
        }
    }

    {
        vec3 v = { x = 1, y = 2, z = 3 };
        float f = vec3_length_sqrd(v);
        print("length_sqrd: ", f, "\n");
    }

    vec3[] a = create_array(n);
    print_array(a);
    double_array(a);
    vec3 s = sum_array(a);
    return s.x + s.y + s.z;
}
