import "math.mscript";

int count_array(int[] array) {
    int sum = 0;
    int i;
    for (i = 0; i < array.length; i++) {
        sum = sum + array[i+1.0];
    }

    if (sum > 0) {
        return sum;
    }
    else if (sum < 0) {
        return 0;
    }
    return 100;
}

struct test {
    vec2 t;
}

struct foo {
    vec3 v0;
    vec3 v1;
}

struct bar {
    vec3[] a;
}

int run() {
    bar[] bars = [ { a = [ { x = 1, y = 2, z = 3 } ] } ];
    (bars[0].a)[1].x = 10;

    bars[0].a = [ ];

    vec3[] aaa = bars[0].a;
    aaa[0] = { x = 2, y = 3, z = 4 };

    vec3[] array = [ { x = 1, y = 2, z = 3 }, { x = 1, y = 2, z = 3 } ];
    array[0].x = 10;

    int d = count_array([1.0, 2, 3.0]);

    vec3 a = { x = 1, y = 2, z = 3 };
    vec3 b = { x = 1, y = 2, z = 3 };

    vec3 vec3 = { x = 1 };
    vec3.y = vec3.x + vec3.x;
    vec3 v = { x = 1 };
    foo f = { 
        v0 = { x = v.x, y = v.y, z = v.z },
        v1 = { x = 1, y = 2, z = 3 }
    };
    int s = vec3_scale(vec3, vec3.x).x;
    return vec3_distance({ x = 1, y = 2, z = 3 }, { x = 1, y = 2, z = 30 });
}
